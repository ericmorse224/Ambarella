{{# def.definitions ***REMOVED******REMOVED***
{{# def.errors ***REMOVED******REMOVED***
{{# def.setupKeyword ***REMOVED******REMOVED***
{{# def.$data ***REMOVED******REMOVED***

{{## def.setExclusiveLimit:
  $exclusive = true;
  $errorKeyword = $exclusiveKeyword;
  $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;
#***REMOVED******REMOVED***

{{
  var $isMax = $keyword == 'maximum'
    , $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum'
    , $schemaExcl = it.schema[$exclusiveKeyword]
    , $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data
    , $op = $isMax ? '<' : '>'
    , $notOp = $isMax ? '>' : '<'
    , $errorKeyword = undefined;

  if (!($isData || typeof $schema == 'number' || $schema === undefined)) {
    throw new Error($keyword + ' must be number');
  ***REMOVED***
  if (!($isDataExcl || $schemaExcl === undefined
                    || typeof $schemaExcl == 'number'
                    || typeof $schemaExcl == 'boolean')) {
    throw new Error($exclusiveKeyword + ' must be number or boolean');
  ***REMOVED***
***REMOVED******REMOVED***

{{? $isDataExcl ***REMOVED******REMOVED***
  {{
    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr)
      , $exclusive = 'exclusive' + $lvl
      , $exclType = 'exclType' + $lvl
      , $exclIsNumber = 'exclIsNumber' + $lvl
      , $opExpr = 'op' + $lvl
      , $opStr = '\' + ' + $opExpr + ' + \'';
  ***REMOVED******REMOVED***
  var schemaExcl{{=$lvl***REMOVED******REMOVED*** = {{=$schemaValueExcl***REMOVED******REMOVED***;
  {{ $schemaValueExcl = 'schemaExcl' + $lvl; ***REMOVED******REMOVED***

  var {{=$exclusive***REMOVED******REMOVED***;
  var {{=$exclType***REMOVED******REMOVED*** = typeof {{=$schemaValueExcl***REMOVED******REMOVED***;
  if ({{=$exclType***REMOVED******REMOVED*** != 'boolean' && {{=$exclType***REMOVED******REMOVED*** != 'undefined' && {{=$exclType***REMOVED******REMOVED*** != 'number') {
    {{ var $errorKeyword = $exclusiveKeyword; ***REMOVED******REMOVED***
    {{# def.error:'_exclusiveLimit' ***REMOVED******REMOVED***
  ***REMOVED*** else if ({{# def.$dataNotType:'number' ***REMOVED******REMOVED***
            {{=$exclType***REMOVED******REMOVED*** == 'number'
              ? (
                  ({{=$exclusive***REMOVED******REMOVED*** = {{=$schemaValue***REMOVED******REMOVED*** === undefined || {{=$schemaValueExcl***REMOVED******REMOVED*** {{=$op***REMOVED******REMOVED***= {{=$schemaValue***REMOVED******REMOVED***)
                    ? {{=$data***REMOVED******REMOVED*** {{=$notOp***REMOVED******REMOVED***= {{=$schemaValueExcl***REMOVED******REMOVED***
                    : {{=$data***REMOVED******REMOVED*** {{=$notOp***REMOVED******REMOVED*** {{=$schemaValue***REMOVED******REMOVED***
                )
              : (
                  ({{=$exclusive***REMOVED******REMOVED*** = {{=$schemaValueExcl***REMOVED******REMOVED*** === true)
                    ? {{=$data***REMOVED******REMOVED*** {{=$notOp***REMOVED******REMOVED***= {{=$schemaValue***REMOVED******REMOVED***
                    : {{=$data***REMOVED******REMOVED*** {{=$notOp***REMOVED******REMOVED*** {{=$schemaValue***REMOVED******REMOVED***
                )
            || {{=$data***REMOVED******REMOVED*** !== {{=$data***REMOVED******REMOVED***) {
    var op{{=$lvl***REMOVED******REMOVED*** = {{=$exclusive***REMOVED******REMOVED*** ? '{{=$op***REMOVED******REMOVED***' : '{{=$op***REMOVED******REMOVED***=';
    {{
      if ($schema === undefined) {
        $errorKeyword = $exclusiveKeyword;
        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;
        $schemaValue = $schemaValueExcl;
        $isData = $isDataExcl;
      ***REMOVED***
    ***REMOVED******REMOVED***
{{??***REMOVED******REMOVED***
  {{
    var $exclIsNumber = typeof $schemaExcl == 'number'
      , $opStr = $op;  /*used in error*/
  ***REMOVED******REMOVED***

  {{? $exclIsNumber && $isData ***REMOVED******REMOVED***
    {{ var $opExpr = '\'' + $opStr + '\''; /*used in error*/ ***REMOVED******REMOVED***
    if ({{# def.$dataNotType:'number' ***REMOVED******REMOVED***
        ( {{=$schemaValue***REMOVED******REMOVED*** === undefined
          || {{=$schemaExcl***REMOVED******REMOVED*** {{=$op***REMOVED******REMOVED***= {{=$schemaValue***REMOVED******REMOVED***
            ? {{=$data***REMOVED******REMOVED*** {{=$notOp***REMOVED******REMOVED***= {{=$schemaExcl***REMOVED******REMOVED***
            : {{=$data***REMOVED******REMOVED*** {{=$notOp***REMOVED******REMOVED*** {{=$schemaValue***REMOVED******REMOVED*** )
        || {{=$data***REMOVED******REMOVED*** !== {{=$data***REMOVED******REMOVED***) {
  {{??***REMOVED******REMOVED***
    {{
      if ($exclIsNumber && $schema === undefined) {
          {{# def.setExclusiveLimit ***REMOVED******REMOVED***
          $schemaValue = $schemaExcl;
          $notOp += '=';
      ***REMOVED*** else {
        if ($exclIsNumber)
          $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);

        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {
          {{# def.setExclusiveLimit ***REMOVED******REMOVED***
          $notOp += '=';
        ***REMOVED*** else {
          $exclusive = false;
          $opStr += '=';
        ***REMOVED***
      ***REMOVED***

      var $opExpr = '\'' + $opStr + '\''; /*used in error*/
    ***REMOVED******REMOVED***

    if ({{# def.$dataNotType:'number' ***REMOVED******REMOVED***
        {{=$data***REMOVED******REMOVED*** {{=$notOp***REMOVED******REMOVED*** {{=$schemaValue***REMOVED******REMOVED***
        || {{=$data***REMOVED******REMOVED*** !== {{=$data***REMOVED******REMOVED***) {
  {{?***REMOVED******REMOVED***
{{?***REMOVED******REMOVED***
    {{ $errorKeyword = $errorKeyword || $keyword; ***REMOVED******REMOVED***
    {{# def.error:'_limit' ***REMOVED******REMOVED***
  ***REMOVED*** {{? $breakOnError ***REMOVED******REMOVED*** else { {{?***REMOVED******REMOVED***
