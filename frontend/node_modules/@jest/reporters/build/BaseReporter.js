'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
***REMOVED***);
exports.default = void 0;

function _jestUtil() {
  const data = require('jest-util');

  _jestUtil = function () {
    return data;
  ***REMOVED***;

  return data;
***REMOVED***

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    ***REMOVED***);
  ***REMOVED*** else {
    obj[key] = value;
  ***REMOVED***
  return obj;
***REMOVED***

const {remove: preRunMessageRemove***REMOVED*** = _jestUtil().preRunMessage;

class BaseReporter {
  constructor() {
    _defineProperty(this, '_error', void 0);
  ***REMOVED***

  log(message) {
    process.stderr.write(message + '\n');
  ***REMOVED***

  onRunStart(_results, _options) {
    preRunMessageRemove(process.stderr);
  ***REMOVED***

  onTestCaseResult(_test, _testCaseResult) {***REMOVED***

  onTestResult(_test, _testResult, _results) {***REMOVED***

  onTestStart(_test) {***REMOVED***

  onRunComplete(_contexts, _aggregatedResults) {***REMOVED***

  _setError(error) {
    this._error = error;
  ***REMOVED*** // Return an error that occurred during reporting. This error will
  // define whether the test run was successful or failed.

  getLastError() {
    return this._error;
  ***REMOVED***
***REMOVED***

exports.default = BaseReporter;
