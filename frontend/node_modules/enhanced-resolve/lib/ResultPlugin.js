/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

/** @typedef {import("./Resolver")***REMOVED*** Resolver */
/** @typedef {import("./Resolver").ResolveStepHook***REMOVED*** ResolveStepHook */

module.exports = class ResultPlugin {
	/**
	 * @param {ResolveStepHook***REMOVED*** source source
	 */
	constructor(source) {
		this.source = source;
	***REMOVED***

	/**
	 * @param {Resolver***REMOVED*** resolver the resolver
	 * @returns {void***REMOVED***
	 */
	apply(resolver) {
		this.source.tapAsync(
			"ResultPlugin",
			(request, resolverContext, callback) => {
				const obj = { ...request ***REMOVED***;
				if (resolverContext.log)
					resolverContext.log("reporting result " + obj.path);
				resolver.hooks.result.callAsync(obj, resolverContext, err => {
					if (err) return callback(err);
					if (typeof resolverContext.yield === "function") {
						resolverContext.yield(obj);
						callback(null, null);
					***REMOVED*** else {
						callback(null, obj);
					***REMOVED***
				***REMOVED***);
			***REMOVED***
		);
	***REMOVED***
***REMOVED***;
