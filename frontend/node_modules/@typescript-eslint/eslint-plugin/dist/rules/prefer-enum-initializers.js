"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; ***REMOVED*** ***REMOVED***;
    ***REMOVED***
    Object.defineProperty(o, k2, desc);
***REMOVED***) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
***REMOVED***));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v ***REMOVED***);
***REMOVED***) : function(o, v) {
    o["default"] = v;
***REMOVED***);
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {***REMOVED***;
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
***REMOVED***;
Object.defineProperty(exports, "__esModule", { value: true ***REMOVED***);
const util = __importStar(require("../util"));
exports.default = util.createRule({
    name: 'prefer-enum-initializers',
    meta: {
        type: 'suggestion',
        docs: {
            description: 'Require each enum member value to be explicitly initialized',
            recommended: false,
        ***REMOVED***,
        hasSuggestions: true,
        messages: {
            defineInitializer: "The value of the member '{{ name ***REMOVED******REMOVED***' should be explicitly defined.",
            defineInitializerSuggestion: 'Can be fixed to {{ name ***REMOVED******REMOVED*** = {{ suggested ***REMOVED******REMOVED***',
        ***REMOVED***,
        schema: [],
    ***REMOVED***,
    defaultOptions: [],
    create(context) {
        const sourceCode = context.getSourceCode();
        function TSEnumDeclaration(node) {
            const { members ***REMOVED*** = node;
            members.forEach((member, index) => {
                if (member.initializer == null) {
                    const name = sourceCode.getText(member);
                    context.report({
                        node: member,
                        messageId: 'defineInitializer',
                        data: {
                            name,
                        ***REMOVED***,
                        suggest: [
                            {
                                messageId: 'defineInitializerSuggestion',
                                data: { name, suggested: index ***REMOVED***,
                                fix: (fixer) => {
                                    return fixer.replaceText(member, `${name***REMOVED*** = ${index***REMOVED***`);
                                ***REMOVED***,
                            ***REMOVED***,
                            {
                                messageId: 'defineInitializerSuggestion',
                                data: { name, suggested: index + 1 ***REMOVED***,
                                fix: (fixer) => {
                                    return fixer.replaceText(member, `${name***REMOVED*** = ${index + 1***REMOVED***`);
                                ***REMOVED***,
                            ***REMOVED***,
                            {
                                messageId: 'defineInitializerSuggestion',
                                data: { name, suggested: `'${name***REMOVED***'` ***REMOVED***,
                                fix: (fixer) => {
                                    return fixer.replaceText(member, `${name***REMOVED*** = '${name***REMOVED***'`);
                                ***REMOVED***,
                            ***REMOVED***,
                        ],
                    ***REMOVED***);
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***
        return {
            TSEnumDeclaration,
        ***REMOVED***;
    ***REMOVED***,
***REMOVED***);
//# sourceMappingURL=prefer-enum-initializers.js.map