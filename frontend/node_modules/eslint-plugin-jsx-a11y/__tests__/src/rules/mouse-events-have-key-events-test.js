/**
 * @fileoverview Enforce onmouseover/onmouseout are accompanied
 *  by onfocus/onblur.
 * @author Ethan Cohen
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

import { RuleTester ***REMOVED*** from 'eslint';
import parserOptionsMapper from '../../__util__/parserOptionsMapper';
import parsers from '../../__util__/helpers/parsers';
import rule from '../../../src/rules/mouse-events-have-key-events';

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

const ruleTester = new RuleTester();

const mouseOverError = {
  message: 'onMouseOver must be accompanied by onFocus for accessibility.',
  type: 'JSXAttribute',
***REMOVED***;
const pointerEnterError = {
  message: 'onPointerEnter must be accompanied by onFocus for accessibility.',
  type: 'JSXAttribute',
***REMOVED***;
const mouseOutError = {
  message: 'onMouseOut must be accompanied by onBlur for accessibility.',
  type: 'JSXAttribute',
***REMOVED***;
const pointerLeaveError = {
  message: 'onPointerLeave must be accompanied by onBlur for accessibility.',
  type: 'JSXAttribute',
***REMOVED***;

ruleTester.run('mouse-events-have-key-events', rule, {
  valid: parsers.all([].concat(
    { code: '<div onMouseOver={() => void 0***REMOVED*** onFocus={() => void 0***REMOVED*** />;' ***REMOVED***,
    {
      code: '<div onMouseOver={() => void 0***REMOVED*** onFocus={() => void 0***REMOVED*** {...props***REMOVED*** />;',
    ***REMOVED***,
    { code: '<div onMouseOver={handleMouseOver***REMOVED*** onFocus={handleFocus***REMOVED*** />;' ***REMOVED***,
    {
      code: '<div onMouseOver={handleMouseOver***REMOVED*** onFocus={handleFocus***REMOVED*** {...props***REMOVED*** />;',
    ***REMOVED***,
    { code: '<div />;' ***REMOVED***,
    { code: '<div onBlur={() => {***REMOVED******REMOVED*** />' ***REMOVED***,
    { code: '<div onFocus={() => {***REMOVED******REMOVED*** />' ***REMOVED***,
    { code: '<div onMouseOut={() => void 0***REMOVED*** onBlur={() => void 0***REMOVED*** />' ***REMOVED***,
    { code: '<div onMouseOut={() => void 0***REMOVED*** onBlur={() => void 0***REMOVED*** {...props***REMOVED*** />' ***REMOVED***,
    { code: '<div onMouseOut={handleMouseOut***REMOVED*** onBlur={handleOnBlur***REMOVED*** />' ***REMOVED***,
    { code: '<div onMouseOut={handleMouseOut***REMOVED*** onBlur={handleOnBlur***REMOVED*** {...props***REMOVED*** />' ***REMOVED***,
    { code: '<MyElement />' ***REMOVED***,
    { code: '<MyElement onMouseOver={() => {***REMOVED******REMOVED*** />' ***REMOVED***,
    { code: '<MyElement onMouseOut={() => {***REMOVED******REMOVED*** />' ***REMOVED***,
    { code: '<MyElement onBlur={() => {***REMOVED******REMOVED*** />' ***REMOVED***,
    { code: '<MyElement onFocus={() => {***REMOVED******REMOVED*** />' ***REMOVED***,
    { code: '<MyElement onMouseOver={() => {***REMOVED******REMOVED*** {...props***REMOVED*** />' ***REMOVED***,
    { code: '<MyElement onMouseOut={() => {***REMOVED******REMOVED*** {...props***REMOVED*** />' ***REMOVED***,
    { code: '<MyElement onBlur={() => {***REMOVED******REMOVED*** {...props***REMOVED*** />' ***REMOVED***,
    { code: '<MyElement onFocus={() => {***REMOVED******REMOVED*** {...props***REMOVED*** />' ***REMOVED***,
    /* Passing in empty options doesn't check any event handlers */
    {
      code: '<div onMouseOver={() => {***REMOVED******REMOVED*** onMouseOut={() => {***REMOVED******REMOVED*** />',
      options: [{ hoverInHandlers: [], hoverOutHandlers: [] ***REMOVED***],
    ***REMOVED***,
    /* Passing in custom handlers */
    {
      code: '<div onMouseOver={() => {***REMOVED******REMOVED*** onFocus={() => {***REMOVED******REMOVED*** />',
      options: [{ hoverInHandlers: ['onMouseOver'] ***REMOVED***],
    ***REMOVED***,
    {
      code: '<div onMouseEnter={() => {***REMOVED******REMOVED*** onFocus={() => {***REMOVED******REMOVED*** />',
      options: [{ hoverInHandlers: ['onMouseEnter'] ***REMOVED***],
    ***REMOVED***,
    {
      code: '<div onMouseOut={() => {***REMOVED******REMOVED*** onBlur={() => {***REMOVED******REMOVED*** />',
      options: [{ hoverOutHandlers: ['onMouseOut'] ***REMOVED***],
    ***REMOVED***,
    {
      code: '<div onMouseLeave={() => {***REMOVED******REMOVED*** onBlur={() => {***REMOVED******REMOVED*** />',
      options: [{ hoverOutHandlers: ['onMouseLeave'] ***REMOVED***],
    ***REMOVED***,
    {
      code: '<div onMouseOver={() => {***REMOVED******REMOVED*** onMouseOut={() => {***REMOVED******REMOVED*** />',
      options: [
        { hoverInHandlers: ['onPointerEnter'], hoverOutHandlers: ['onPointerLeave'] ***REMOVED***,
      ],
    ***REMOVED***,
    /* Custom options only checks the handlers passed in */
    {
      code: '<div onMouseLeave={() => {***REMOVED******REMOVED*** />',
      options: [{ hoverOutHandlers: ['onPointerLeave'] ***REMOVED***],
    ***REMOVED***,
  )).map(parserOptionsMapper),
  invalid: parsers.all([].concat(
    { code: '<div onMouseOver={() => void 0***REMOVED*** />;', errors: [mouseOverError] ***REMOVED***,
    { code: '<div onMouseOut={() => void 0***REMOVED*** />', errors: [mouseOutError] ***REMOVED***,
    {
      code: '<div onMouseOver={() => void 0***REMOVED*** onFocus={undefined***REMOVED*** />;',
      errors: [mouseOverError],
    ***REMOVED***,
    {
      code: '<div onMouseOut={() => void 0***REMOVED*** onBlur={undefined***REMOVED*** />',
      errors: [mouseOutError],
    ***REMOVED***,
    {
      code: '<div onMouseOver={() => void 0***REMOVED*** {...props***REMOVED*** />',
      errors: [mouseOverError],
    ***REMOVED***,
    {
      code: '<div onMouseOut={() => void 0***REMOVED*** {...props***REMOVED*** />',
      errors: [mouseOutError],
    ***REMOVED***,
    /* Custom options */
    {
      code: '<div onMouseOver={() => {***REMOVED******REMOVED*** onMouseOut={() => {***REMOVED******REMOVED*** />',
      options: [
        { hoverInHandlers: ['onMouseOver'], hoverOutHandlers: ['onMouseOut'] ***REMOVED***,
      ],
      errors: [mouseOverError, mouseOutError],
    ***REMOVED***,
    {
      code: '<div onPointerEnter={() => {***REMOVED******REMOVED*** onPointerLeave={() => {***REMOVED******REMOVED*** />',
      options: [
        { hoverInHandlers: ['onPointerEnter'], hoverOutHandlers: ['onPointerLeave'] ***REMOVED***,
      ],
      errors: [pointerEnterError, pointerLeaveError],
    ***REMOVED***,
    {
      code: '<div onMouseOver={() => {***REMOVED******REMOVED*** />',
      options: [{ hoverInHandlers: ['onMouseOver'] ***REMOVED***],
      errors: [mouseOverError],
    ***REMOVED***,
    {
      code: '<div onPointerEnter={() => {***REMOVED******REMOVED*** />',
      options: [{ hoverInHandlers: ['onPointerEnter'] ***REMOVED***],
      errors: [pointerEnterError],
    ***REMOVED***,
    {
      code: '<div onMouseOut={() => {***REMOVED******REMOVED*** />',
      options: [{ hoverOutHandlers: ['onMouseOut'] ***REMOVED***],
      errors: [mouseOutError],
    ***REMOVED***,
    {
      code: '<div onPointerLeave={() => {***REMOVED******REMOVED*** />',
      options: [{ hoverOutHandlers: ['onPointerLeave'] ***REMOVED***],
      errors: [pointerLeaveError],
    ***REMOVED***,
  )).map(parserOptionsMapper),
***REMOVED***);
