'use strict';

var test = require('tape');
var parse = require('../').parse;

test('expand environment variables', function (t) {
	t.same(parse('a $XYZ c', { XYZ: 'b' ***REMOVED***), ['a', 'b', 'c']);
	t.same(parse('a${XYZ***REMOVED***c', { XYZ: 'b' ***REMOVED***), ['abc']);
	t.same(parse('a${XYZ***REMOVED***c $XYZ', { XYZ: 'b' ***REMOVED***), ['abc', 'b']);
	t.same(parse('"-$X-$Y-"', { X: 'a', Y: 'b' ***REMOVED***), ['-a-b-']);
	t.same(parse("'-$X-$Y-'", { X: 'a', Y: 'b' ***REMOVED***), ['-$X-$Y-']);
	t.same(parse('qrs"$zzz"wxy', { zzz: 'tuv' ***REMOVED***), ['qrstuvwxy']);
	t.same(parse("qrs'$zzz'wxy", { zzz: 'tuv' ***REMOVED***), ['qrs$zzzwxy']);
	t.same(parse('qrs${zzz***REMOVED***wxy'), ['qrswxy']);
	t.same(parse('qrs$wxy $'), ['qrs', '$']);
	t.same(parse('grep "xy$"'), ['grep', 'xy$']);
	t.same(parse('ab$x', { x: 'c' ***REMOVED***), ['abc']);
	t.same(parse('ab\\$x', { x: 'c' ***REMOVED***), ['ab$x']);
	t.same(parse('ab${x***REMOVED***def', { x: 'c' ***REMOVED***), ['abcdef']);
	t.same(parse('ab\\${x***REMOVED***def', { x: 'c' ***REMOVED***), ['ab${x***REMOVED***def']);
	t.same(parse('"ab\\${x***REMOVED***def"', { x: 'c' ***REMOVED***), ['ab${x***REMOVED***def']);

	t.end();
***REMOVED***);

test('expand environment variables within here-strings', function (t) {
	t.same(parse('a <<< $x', { x: 'Joe' ***REMOVED***), ['a', { op: '<<<' ***REMOVED***, 'Joe']);
	t.same(parse('a <<< ${x***REMOVED***', { x: 'Joe' ***REMOVED***), ['a', { op: '<<<' ***REMOVED***, 'Joe']);
	t.same(parse('a <<< "$x"', { x: 'Joe' ***REMOVED***), ['a', { op: '<<<' ***REMOVED***, 'Joe']);
	t.same(parse('a <<< "${x***REMOVED***"', { x: 'Joe' ***REMOVED***), ['a', { op: '<<<' ***REMOVED***, 'Joe']);

	t.end();
***REMOVED***);

test('environment variables with metacharacters', function (t) {
	t.same(parse('a $XYZ c', { XYZ: '"b"' ***REMOVED***), ['a', '"b"', 'c']);
	t.same(parse('a $XYZ c', { XYZ: '$X', X: 5 ***REMOVED***), ['a', '$X', 'c']);
	t.same(parse('a"$XYZ"c', { XYZ: "'xyz'" ***REMOVED***), ["a'xyz'c"]);

	t.end();
***REMOVED***);

test('special shell parameters', function (t) {
	var chars = '*@#?-$!0_'.split('');
	t.plan(chars.length);

	chars.forEach(function (c) {
		var env = {***REMOVED***;
		env[c] = 'xxx';
		t.same(parse('a $' + c + ' c', env), ['a', 'xxx', 'c']);
	***REMOVED***);
***REMOVED***);
