{{# def.definitions ***REMOVED******REMOVED***
{{# def.errors ***REMOVED******REMOVED***
{{# def.setupKeyword ***REMOVED******REMOVED***
{{# def.setupNextLevel ***REMOVED******REMOVED***

{{
  var $noEmptySchema = $schema.every(function($sch) {
    return {{# def.nonEmptySchema:$sch ***REMOVED******REMOVED***;
  ***REMOVED***);
***REMOVED******REMOVED***
{{? $noEmptySchema ***REMOVED******REMOVED***
  {{ var $currentBaseId = $it.baseId; ***REMOVED******REMOVED***
  var {{=$errs***REMOVED******REMOVED*** = errors;
  var {{=$valid***REMOVED******REMOVED*** = false;

  {{# def.setCompositeRule ***REMOVED******REMOVED***

  {{~ $schema:$sch:$i ***REMOVED******REMOVED***
    {{
      $it.schema = $sch;
      $it.schemaPath = $schemaPath + '[' + $i + ']';
      $it.errSchemaPath = $errSchemaPath + '/' + $i;
    ***REMOVED******REMOVED***

    {{# def.insertSubschemaCode ***REMOVED******REMOVED***

    {{=$valid***REMOVED******REMOVED*** = {{=$valid***REMOVED******REMOVED*** || {{=$nextValid***REMOVED******REMOVED***;

    if (!{{=$valid***REMOVED******REMOVED***) {
    {{ $closingBraces += '***REMOVED***'; ***REMOVED******REMOVED***
  {{~***REMOVED******REMOVED***

  {{# def.resetCompositeRule ***REMOVED******REMOVED***

  {{= $closingBraces ***REMOVED******REMOVED***

  if (!{{=$valid***REMOVED******REMOVED***) {
    {{# def.extraError:'anyOf' ***REMOVED******REMOVED***
  ***REMOVED*** else {
    {{# def.resetErrors ***REMOVED******REMOVED***
  {{? it.opts.allErrors ***REMOVED******REMOVED*** ***REMOVED*** {{?***REMOVED******REMOVED***
{{??***REMOVED******REMOVED***
  {{? $breakOnError ***REMOVED******REMOVED***
    if (true) {
  {{?***REMOVED******REMOVED***
{{?***REMOVED******REMOVED***
