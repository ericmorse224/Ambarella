/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

const WebpackError = require("./WebpackError");

/** @typedef {import("./Module")***REMOVED*** Module */
/** @typedef {import("./ModuleGraph")***REMOVED*** ModuleGraph */

/**
 * @param {Module[]***REMOVED*** modules the modules to be sorted
 * @returns {Module[]***REMOVED*** sorted version of original modules
 */
const sortModules = modules =>
	modules.sort((a, b) => {
		const aIdent = a.identifier();
		const bIdent = b.identifier();
		/* istanbul ignore next */
		if (aIdent < bIdent) return -1;
		/* istanbul ignore next */
		if (aIdent > bIdent) return 1;
		/* istanbul ignore next */
		return 0;
	***REMOVED***);

/**
 * @param {Module[]***REMOVED*** modules each module from throw
 * @param {ModuleGraph***REMOVED*** moduleGraph the module graph
 * @returns {string***REMOVED*** each message from provided modules
 */
const createModulesListMessage = (modules, moduleGraph) =>
	modules
		.map(m => {
			let message = `* ${m.identifier()***REMOVED***`;
			const validReasons = Array.from(
				moduleGraph.getIncomingConnectionsByOriginModule(m).keys()
			).filter(Boolean);

			if (validReasons.length > 0) {
				message += `\n    Used by ${validReasons.length***REMOVED*** module(s), i. e.`;
				message += `\n    ${
					/** @type {Module[]***REMOVED*** */ (validReasons)[0].identifier()
				***REMOVED***`;
			***REMOVED***
			return message;
		***REMOVED***)
		.join("\n");

class CaseSensitiveModulesWarning extends WebpackError {
	/**
	 * Creates an instance of CaseSensitiveModulesWarning.
	 * @param {Iterable<Module>***REMOVED*** modules modules that were detected
	 * @param {ModuleGraph***REMOVED*** moduleGraph the module graph
	 */
	constructor(modules, moduleGraph) {
		const sortedModules = sortModules(Array.from(modules));
		const modulesList = createModulesListMessage(sortedModules, moduleGraph);
		super(`There are multiple modules with names that only differ in casing.
This can lead to unexpected behavior when compiling on a filesystem with other case-semantic.
Use equal casing. Compare these module identifiers:
${modulesList***REMOVED***`);

		this.name = "CaseSensitiveModulesWarning";
		this.module = sortedModules[0];
	***REMOVED***
***REMOVED***

module.exports = CaseSensitiveModulesWarning;
