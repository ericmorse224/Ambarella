"use strict";

exports.__esModule = true;
exports.default = void 0;

var _util = require("./util");

function defaultTemplate({
  template
***REMOVED***, opts, {
  imports,
  interfaces,
  componentName,
  props,
  jsx,
  exports
***REMOVED***) {
  const plugins = ['jsx'];

  if (opts.typescript) {
    plugins.push('typescript');
  ***REMOVED***

  const typeScriptTpl = template.smart({
    plugins
  ***REMOVED***);
  return typeScriptTpl.ast`${imports***REMOVED***

${interfaces***REMOVED***

function ${componentName***REMOVED***(${props***REMOVED***) {
  return ${jsx***REMOVED***;
***REMOVED***
${exports***REMOVED***
  `;
***REMOVED***

const plugin = (api, opts) => ({
  visitor: {
    Program(path) {
      const {
        types: t
      ***REMOVED*** = api;
      const template = opts.template || defaultTemplate;
      const body = template(api, opts, {
        componentName: t.identifier(opts.state.componentName),
        interfaces: (0, _util.getInterface)(api, opts),
        props: (0, _util.getProps)(api, opts),
        imports: (0, _util.getImport)(api, opts),
        exports: (0, _util.getExport)(api, opts),
        jsx: path.node.body[0].expression
      ***REMOVED***);

      if (Array.isArray(body)) {
        path.node.body = body;
      ***REMOVED*** else {
        path.node.body = [body];
      ***REMOVED***

      path.replaceWith(path.node);
    ***REMOVED***

  ***REMOVED***
***REMOVED***);

var _default = plugin;
exports.default = _default;