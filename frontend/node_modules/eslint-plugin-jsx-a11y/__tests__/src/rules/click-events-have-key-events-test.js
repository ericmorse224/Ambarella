/**
 * @fileoverview Enforce a clickable non-interactive element has at least 1 keyboard event listener.
 * @author Ethan Cohen
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

import { RuleTester ***REMOVED*** from 'eslint';
import parserOptionsMapper from '../../__util__/parserOptionsMapper';
import parsers from '../../__util__/helpers/parsers';
import rule from '../../../src/rules/click-events-have-key-events';

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

const ruleTester = new RuleTester();

const errorMessage = 'Visible, non-interactive elements with click handlers must have at least one keyboard listener.';

const expectedError = {
  message: errorMessage,
  type: 'JSXOpeningElement',
***REMOVED***;

ruleTester.run('click-events-have-key-events', rule, {
  valid: parsers.all([].concat(
    { code: '<div onClick={() => void 0***REMOVED*** onKeyDown={foo***REMOVED***/>;' ***REMOVED***,
    { code: '<div onClick={() => void 0***REMOVED*** onKeyUp={foo***REMOVED*** />;' ***REMOVED***,
    { code: '<div onClick={() => void 0***REMOVED*** onKeyPress={foo***REMOVED***/>;' ***REMOVED***,
    { code: '<div onClick={() => void 0***REMOVED*** onKeyDown={foo***REMOVED*** onKeyUp={bar***REMOVED*** />;' ***REMOVED***,
    { code: '<div onClick={() => void 0***REMOVED*** onKeyDown={foo***REMOVED*** {...props***REMOVED*** />;' ***REMOVED***,
    { code: '<div className="foo" />;' ***REMOVED***,
    { code: '<div onClick={() => void 0***REMOVED*** aria-hidden />;' ***REMOVED***,
    { code: '<div onClick={() => void 0***REMOVED*** aria-hidden={true***REMOVED*** />;' ***REMOVED***,
    { code: '<div onClick={() => void 0***REMOVED*** aria-hidden={false***REMOVED*** onKeyDown={foo***REMOVED*** />;' ***REMOVED***,
    {
      code: '<div onClick={() => void 0***REMOVED*** onKeyDown={foo***REMOVED*** aria-hidden={undefined***REMOVED*** />;',
    ***REMOVED***,
    { code: '<input type="text" onClick={() => void 0***REMOVED*** />' ***REMOVED***,
    { code: '<input onClick={() => void 0***REMOVED*** />' ***REMOVED***,
    { code: '<button onClick={() => void 0***REMOVED*** className="foo" />' ***REMOVED***,
    { code: '<option onClick={() => void 0***REMOVED*** className="foo" />' ***REMOVED***,
    { code: '<select onClick={() => void 0***REMOVED*** className="foo" />' ***REMOVED***,
    { code: '<textarea onClick={() => void 0***REMOVED*** className="foo" />' ***REMOVED***,
    { code: '<a onClick={() => void 0***REMOVED*** href="http://x.y.z" />' ***REMOVED***,
    { code: '<a onClick={() => void 0***REMOVED*** href="http://x.y.z" tabIndex="0" />' ***REMOVED***,
    { code: '<input onClick={() => void 0***REMOVED*** type="hidden" />;' ***REMOVED***,
    { code: '<div onClick={() => void 0***REMOVED*** role="presentation" />;' ***REMOVED***,
    { code: '<div onClick={() => void 0***REMOVED*** role="none" />;' ***REMOVED***,
    { code: '<TestComponent onClick={doFoo***REMOVED*** />' ***REMOVED***,
    { code: '<Button onClick={doFoo***REMOVED*** />' ***REMOVED***,
    { code: '<Footer onClick={doFoo***REMOVED*** />' ***REMOVED***,
  )).map(parserOptionsMapper),
  invalid: parsers.all([].concat(
    { code: '<div onClick={() => void 0***REMOVED*** />;', errors: [expectedError] ***REMOVED***,
    {
      code: '<div onClick={() => void 0***REMOVED*** role={undefined***REMOVED*** />;',
      errors: [expectedError],
    ***REMOVED***,
    { code: '<div onClick={() => void 0***REMOVED*** {...props***REMOVED*** />;', errors: [expectedError] ***REMOVED***,
    { code: '<section onClick={() => void 0***REMOVED*** />;', errors: [expectedError] ***REMOVED***,
    { code: '<main onClick={() => void 0***REMOVED*** />;', errors: [expectedError] ***REMOVED***,
    { code: '<article onClick={() => void 0***REMOVED*** />;', errors: [expectedError] ***REMOVED***,
    { code: '<header onClick={() => void 0***REMOVED*** />;', errors: [expectedError] ***REMOVED***,
    { code: '<footer onClick={() => void 0***REMOVED*** />;', errors: [expectedError] ***REMOVED***,
    {
      code: '<div onClick={() => void 0***REMOVED*** aria-hidden={false***REMOVED*** />;',
      errors: [expectedError],
    ***REMOVED***,
    { code: '<a onClick={() => void 0***REMOVED*** />', errors: [expectedError] ***REMOVED***,
    { code: '<a tabIndex="0" onClick={() => void 0***REMOVED*** />', errors: [expectedError] ***REMOVED***,
    { code: '<Footer onClick={doFoo***REMOVED*** />', errors: [expectedError], settings: { 'jsx-a11y': { components: { Footer: 'footer' ***REMOVED*** ***REMOVED*** ***REMOVED*** ***REMOVED***,
  )).map(parserOptionsMapper),
***REMOVED***);
