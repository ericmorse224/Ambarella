"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; ***REMOVED*** ***REMOVED***;
    ***REMOVED***
    Object.defineProperty(o, k2, desc);
***REMOVED***) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
***REMOVED***));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v ***REMOVED***);
***REMOVED***) : function(o, v) {
    o["default"] = v;
***REMOVED***);
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {***REMOVED***;
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
***REMOVED***;
Object.defineProperty(exports, "__esModule", { value: true ***REMOVED***);
exports.maybeGetESLintCoreRule = exports.getESLintCoreRule = void 0;
const utils_1 = require("@typescript-eslint/utils");
const package_json_1 = require("eslint/package.json");
const semver = __importStar(require("semver"));
const isESLintV8 = semver.major(package_json_1.version) >= 8;
exports.getESLintCoreRule = isESLintV8
    ? (ruleId) => utils_1.ESLintUtils.nullThrows(
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call
    require('eslint/use-at-your-own-risk').builtinRules.get(ruleId), `ESLint's core rule '${ruleId***REMOVED***' not found.`)
    : (ruleId) => require(`eslint/lib/rules/${ruleId***REMOVED***`);
function maybeGetESLintCoreRule(ruleId) {
    try {
        return (0, exports.getESLintCoreRule)(ruleId);
    ***REMOVED***
    catch (_a) {
        return null;
    ***REMOVED***
***REMOVED***
exports.maybeGetESLintCoreRule = maybeGetESLintCoreRule;
//# sourceMappingURL=getESLintCoreRule.js.map