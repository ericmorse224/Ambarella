/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

const Hook = require("./Hook");
const HookCodeFactory = require("./HookCodeFactory");

class AsyncSeriesBailHookCodeFactory extends HookCodeFactory {
	content({ onError, onResult, resultReturns, onDone ***REMOVED***) {
		return this.callTapsSeries({
			onError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),
			onResult: (i, result, next) =>
				`if(${result***REMOVED*** !== undefined) {\n${onResult(
					result
				)***REMOVED***;\n***REMOVED*** else {\n${next()***REMOVED******REMOVED***\n`,
			resultReturns,
			onDone
		***REMOVED***);
	***REMOVED***
***REMOVED***

const factory = new AsyncSeriesBailHookCodeFactory();

class AsyncSeriesBailHook extends Hook {
	compile(options) {
		factory.setup(this, options);
		return factory.create(options);
	***REMOVED***
***REMOVED***

Object.defineProperties(AsyncSeriesBailHook.prototype, {
	_call: { value: undefined, configurable: true, writable: true ***REMOVED***
***REMOVED***);

module.exports = AsyncSeriesBailHook;
