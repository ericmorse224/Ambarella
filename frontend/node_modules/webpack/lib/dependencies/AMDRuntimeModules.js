/*
	MIT License http://www.opensource.org/licenses/mit-license.php
*/

"use strict";

const RuntimeGlobals = require("../RuntimeGlobals");
const RuntimeModule = require("../RuntimeModule");
const Template = require("../Template");

/** @typedef {import("./AMDPlugin").AmdOptions***REMOVED*** AmdOptions */

class AMDDefineRuntimeModule extends RuntimeModule {
	constructor() {
		super("amd define");
	***REMOVED***

	/**
	 * @returns {string | null***REMOVED*** runtime code
	 */
	generate() {
		return Template.asString([
			`${RuntimeGlobals.amdDefine***REMOVED*** = function () {`,
			Template.indent("throw new Error('define cannot be used indirect');"),
			"***REMOVED***;"
		]);
	***REMOVED***
***REMOVED***

class AMDOptionsRuntimeModule extends RuntimeModule {
	/**
	 * @param {AmdOptions***REMOVED*** options the AMD options
	 */
	constructor(options) {
		super("amd options");
		this.options = options;
	***REMOVED***

	/**
	 * @returns {string | null***REMOVED*** runtime code
	 */
	generate() {
		return Template.asString([
			`${RuntimeGlobals.amdOptions***REMOVED*** = ${JSON.stringify(this.options)***REMOVED***;`
		]);
	***REMOVED***
***REMOVED***

module.exports.AMDDefineRuntimeModule = AMDDefineRuntimeModule;
module.exports.AMDOptionsRuntimeModule = AMDOptionsRuntimeModule;
