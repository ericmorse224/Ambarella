"use strict";

function isDirectoryIndex(resource, options)
{
	var verdict = false;
	
	options.directoryIndexes.every( function(index)
	{
		if (index === resource)
		{
			verdict = true;
			return false;
		***REMOVED***
		
		return true;
	***REMOVED***);
	
	return verdict;
***REMOVED***



function parsePath(urlObj, options)
{
	var path = urlObj.path.absolute.string;
	
	if (path)
	{
		var lastSlash = path.lastIndexOf("/");
		
		if (lastSlash > -1)
		{
			if (++lastSlash < path.length)
			{
				var resource = path.substr(lastSlash);
				
				if (resource!=="." && resource!=="..")
				{
					urlObj.resource = resource;
					path = path.substr(0, lastSlash);
				***REMOVED***
				else
				{
					path += "/";
				***REMOVED***
			***REMOVED***
			
			urlObj.path.absolute.string = path;
			urlObj.path.absolute.array = splitPath(path);
		***REMOVED***
		else if (path==="." || path==="..")
		{
			// "..?var", "..#anchor", etc ... not "..index.html"
			path += "/";
			
			urlObj.path.absolute.string = path;
			urlObj.path.absolute.array = splitPath(path);
		***REMOVED***
		else
		{
			// Resource-only
			urlObj.resource = path;
			urlObj.path.absolute.string = null;
		***REMOVED***
		
		urlObj.extra.resourceIsIndex = isDirectoryIndex(urlObj.resource, options);
	***REMOVED***
	// Else: query/hash-only or empty
***REMOVED***



function splitPath(path)
{
	// TWEAK :: condition only for speed optimization
	if (path !== "/")
	{
		var cleaned = [];
		
		path.split("/").forEach( function(dir)
		{
			// Cleanup -- splitting "/dir/" becomes ["","dir",""]
			if (dir !== "")
			{
				cleaned.push(dir);
			***REMOVED***
		***REMOVED***);
		
		return cleaned;
	***REMOVED***
	else
	{
		// Faster to skip the above block and just create an array
		return [];
	***REMOVED***
***REMOVED***



module.exports = parsePath;
