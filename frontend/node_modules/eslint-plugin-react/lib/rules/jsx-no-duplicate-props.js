/**
 * @fileoverview Enforce no duplicate props
 * @author Markus Ånöstam
 */

'use strict';

const has = require('hasown');
const docsUrl = require('../util/docsUrl');
const report = require('../util/report');

// ------------------------------------------------------------------------------
// Rule Definition
// ------------------------------------------------------------------------------

const messages = {
  noDuplicateProps: 'No duplicate props allowed',
***REMOVED***;

/** @type {import('eslint').Rule.RuleModule***REMOVED*** */
module.exports = {
  meta: {
    docs: {
      description: 'Disallow duplicate properties in JSX',
      category: 'Possible Errors',
      recommended: true,
      url: docsUrl('jsx-no-duplicate-props'),
    ***REMOVED***,

    messages,

    schema: [{
      type: 'object',
      properties: {
        ignoreCase: {
          type: 'boolean',
        ***REMOVED***,
      ***REMOVED***,
      additionalProperties: false,
    ***REMOVED***],
  ***REMOVED***,

  create(context) {
    const configuration = context.options[0] || {***REMOVED***;
    const ignoreCase = configuration.ignoreCase || false;

    return {
      JSXOpeningElement(node) {
        const props = {***REMOVED***;

        node.attributes.forEach((decl) => {
          if (decl.type === 'JSXSpreadAttribute') {
            return;
          ***REMOVED***

          let name = decl.name.name;

          if (typeof name !== 'string') {
            return;
          ***REMOVED***

          if (ignoreCase) {
            name = name.toLowerCase();
          ***REMOVED***

          if (has(props, name)) {
            report(context, messages.noDuplicateProps, 'noDuplicateProps', {
              node: decl,
            ***REMOVED***);
          ***REMOVED*** else {
            props[name] = 1;
          ***REMOVED***
        ***REMOVED***);
      ***REMOVED***,
    ***REMOVED***;
  ***REMOVED***,
***REMOVED***;
