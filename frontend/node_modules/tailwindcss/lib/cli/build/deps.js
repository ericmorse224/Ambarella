// @ts-check
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
***REMOVED***);
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    ***REMOVED***);
***REMOVED***
_export(exports, {
    loadPostcss: function() {
        return loadPostcss;
    ***REMOVED***,
    loadPostcssImport: function() {
        return loadPostcssImport;
    ***REMOVED***,
    loadCssNano: function() {
        return loadCssNano;
    ***REMOVED***,
    loadAutoprefixer: function() {
        return loadAutoprefixer;
    ***REMOVED***
***REMOVED***);
const _index = require("../../../peers/index.js");
function loadPostcss() {
    // Try to load a local `postcss` version first
    try {
        return require("postcss");
    ***REMOVED*** catch  {***REMOVED***
    return (0, _index.lazyPostcss)();
***REMOVED***
function loadPostcssImport() {
    // Try to load a local `postcss-import` version first
    try {
        return require("postcss-import");
    ***REMOVED*** catch  {***REMOVED***
    return (0, _index.lazyPostcssImport)();
***REMOVED***
function loadCssNano() {
    let options = {
        preset: [
            "default",
            {
                cssDeclarationSorter: false
            ***REMOVED***
        ]
    ***REMOVED***;
    // Try to load a local `cssnano` version first
    try {
        return require("cssnano");
    ***REMOVED*** catch  {***REMOVED***
    return (0, _index.lazyCssnano)()(options);
***REMOVED***
function loadAutoprefixer() {
    // Try to load a local `autoprefixer` version first
    try {
        return require("autoprefixer");
    ***REMOVED*** catch  {***REMOVED***
    return (0, _index.lazyAutoprefixer)();
***REMOVED***
