{"ast":null,"code":"'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {***REMOVED***\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {***REMOVED***)([1, 2, 3]);\n *  ```\n *\n * @param {Function***REMOVED*** callback\n * @returns {Function***REMOVED***\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  ***REMOVED***;\n***REMOVED***;","map":{"version":3,"names":["module","exports","spread","callback","wrap","arr","apply"],"sources":["C:/Users/bandi/meeting-summary-dashboard/frontend/node_modules/axios/lib/helpers/spread.js"],"sourcesContent":["'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {***REMOVED***\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {***REMOVED***)([1, 2, 3]);\n *  ```\n *\n * @param {Function***REMOVED*** callback\n * @returns {Function***REMOVED***\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  ***REMOVED***;\n***REMOVED***;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,MAAMA,CAACC,QAAQ,EAAE;EACzC,OAAO,SAASC,IAAIA,CAACC,GAAG,EAAE;IACxB,OAAOF,QAAQ,CAACG,KAAK,CAAC,IAAI,EAAED,GAAG,CAAC;EAClC,CAAC;AACH,CAAC","ignoreList":[]***REMOVED***,"metadata":{***REMOVED***,"sourceType":"script","externalDependencies":[]***REMOVED***