'use strict';

module.exports = function (getPrototypeOf, t) {
	t.test('nullish value', function (st) {
		st['throws'](function () { return getPrototypeOf(undefined); ***REMOVED***, TypeError, 'undefined is not an object');
		st['throws'](function () { return getPrototypeOf(null); ***REMOVED***, TypeError, 'null is not an object');
		st.end();
	***REMOVED***);

	t['throws'](function () { getPrototypeOf(true); ***REMOVED***, 'throws for true');
	t['throws'](function () { getPrototypeOf(false); ***REMOVED***, 'throws for false');
	t['throws'](function () { getPrototypeOf(42); ***REMOVED***, 'throws for 42');
	t['throws'](function () { getPrototypeOf(NaN); ***REMOVED***, 'throws for NaN');
	t['throws'](function () { getPrototypeOf(0); ***REMOVED***, 'throws for +0');
	t['throws'](function () { getPrototypeOf(-0); ***REMOVED***, 'throws for -0');
	t['throws'](function () { getPrototypeOf(Infinity); ***REMOVED***, 'throws for ∞');
	t['throws'](function () { getPrototypeOf(-Infinity); ***REMOVED***, 'throws for -∞');
	t['throws'](function () { getPrototypeOf(''); ***REMOVED***, 'throws for empty string');
	t['throws'](function () { getPrototypeOf('foo'); ***REMOVED***, 'throws for non-empty string');
	t.equal(getPrototypeOf(/a/g), RegExp.prototype);
	t.equal(getPrototypeOf(new Date()), Date.prototype);
	t.equal(getPrototypeOf(function () {***REMOVED***), Function.prototype);
	t.equal(getPrototypeOf([]), Array.prototype);
	t.equal(getPrototypeOf({***REMOVED***), Object.prototype);

	var obj = { __proto__: null ***REMOVED***;
	if ('toString' in obj) {
		t.comment('no null objects in this engine');
		t.equal(getPrototypeOf(obj), Object.prototype, '"null" object has Object.prototype as [[Prototype]]');
	***REMOVED*** else {
		t.equal(getPrototypeOf(obj), null, 'null object has null [[Prototype]]');
	***REMOVED***
***REMOVED***;
