/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

const WebpackError = require("./WebpackError");

/** @typedef {import("./Dependency").DependencyLocation***REMOVED*** DependencyLocation */
/** @typedef {import("./Module")***REMOVED*** Module */
/** @typedef {import("./ModuleBuildError").ErrorWithHideStack***REMOVED*** ErrorWithHideStack */

class ModuleDependencyError extends WebpackError {
	/**
	 * Creates an instance of ModuleDependencyError.
	 * @param {Module***REMOVED*** module module tied to dependency
	 * @param {ErrorWithHideStack***REMOVED*** err error thrown
	 * @param {DependencyLocation***REMOVED*** loc location of dependency
	 */
	constructor(module, err, loc) {
		super(err.message);

		this.name = "ModuleDependencyError";
		this.details =
			err && !err.hideStack
				? /** @type {string***REMOVED*** */ (err.stack).split("\n").slice(1).join("\n")
				: undefined;
		this.module = module;
		this.loc = loc;
		/** error is not (de)serialized, so it might be undefined after deserialization */
		this.error = err;

		if (err && err.hideStack && err.stack) {
			this.stack = /** @type {string***REMOVED*** */ `${err.stack
				.split("\n")
				.slice(1)
				.join("\n")***REMOVED***\n\n${this.stack***REMOVED***`;
		***REMOVED***
	***REMOVED***
***REMOVED***

module.exports = ModuleDependencyError;
