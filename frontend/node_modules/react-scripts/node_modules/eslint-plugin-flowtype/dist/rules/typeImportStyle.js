"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
***REMOVED***);
exports.default = void 0;
const schema = [{
  enum: ['declaration', 'identifier'],
  type: 'string'
***REMOVED***, {
  additionalProperties: false,
  properties: {
    ignoreTypeDefault: {
      type: 'boolean'
    ***REMOVED***
  ***REMOVED***,
  type: 'object'
***REMOVED***];

const create = context => {
  if (context.options[0] === 'declaration') {
    return {
      ImportDeclaration(node) {
        if (node.importKind !== 'type') {
          for (const specifier of node.specifiers) {
            if (specifier.importKind === 'type') {
              context.report({
                message: 'Unexpected type import',
                node
              ***REMOVED***);
            ***REMOVED***
          ***REMOVED***
        ***REMOVED***
      ***REMOVED***

    ***REMOVED***;
  ***REMOVED*** // Default to 'identifier'


  const ignoreTypeDefault = context.options[1] && context.options[1].ignoreTypeDefault;
  let isInsideDeclareModule = false;
  return {
    DeclareModule() {
      isInsideDeclareModule = true;
    ***REMOVED***,

    'DeclareModule:exit'() {
      isInsideDeclareModule = false;
    ***REMOVED***,

    ImportDeclaration(node) {
      if (node.importKind !== 'type') {
        return;
      ***REMOVED*** // type specifiers are not allowed inside module declarations:
      // https://github.com/facebook/flow/issues/7609


      if (isInsideDeclareModule) {
        return;
      ***REMOVED***

      if (ignoreTypeDefault && node.specifiers[0] && node.specifiers[0].type === 'ImportDefaultSpecifier') {
        return;
      ***REMOVED***

      context.report({
        fix(fixer) {
          const imports = node.specifiers.map(specifier => {
            if (specifier.type === 'ImportDefaultSpecifier') {
              return 'type default as ' + specifier.local.name;
            ***REMOVED***

            if (specifier.imported.name === specifier.local.name) {
              return 'type ' + specifier.local.name;
            ***REMOVED***

            return 'type ' + specifier.imported.name + ' as ' + specifier.local.name;
          ***REMOVED***);
          const source = node.source.value;
          return fixer.replaceText(node, 'import {' + imports.join(', ') + '***REMOVED*** from \'' + source + '\';');
        ***REMOVED***,

        message: 'Unexpected "import type"',
        node
      ***REMOVED***);
    ***REMOVED***

  ***REMOVED***;
***REMOVED***;

var _default = {
  create,
  meta: {
    fixable: 'code'
  ***REMOVED***,
  schema
***REMOVED***;
exports.default = _default;
module.exports = exports.default;