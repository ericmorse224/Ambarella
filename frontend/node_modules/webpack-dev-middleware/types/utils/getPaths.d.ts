/// <reference types="node" />
export = getPaths;
/** @typedef {import("webpack").Compiler***REMOVED*** Compiler */
/** @typedef {import("webpack").Stats***REMOVED*** Stats */
/** @typedef {import("webpack").MultiStats***REMOVED*** MultiStats */
/** @typedef {import("../index.js").IncomingMessage***REMOVED*** IncomingMessage */
/** @typedef {import("../index.js").ServerResponse***REMOVED*** ServerResponse */
/**
 * @template {IncomingMessage***REMOVED*** Request
 * @template {ServerResponse***REMOVED*** Response
 * @param {import("../index.js").Context<Request, Response>***REMOVED*** context
 */
declare function getPaths<
  Request_1 extends import("http").IncomingMessage,
  Response_1 extends import("../index.js").ServerResponse
>(
  context: import("../index.js").Context<Request_1, Response_1>
): {
  outputPath: string;
  publicPath: string;
***REMOVED***[];
declare namespace getPaths {
  export { Compiler, Stats, MultiStats, IncomingMessage, ServerResponse ***REMOVED***;
***REMOVED***
type Compiler = import("webpack").Compiler;
type Stats = import("webpack").Stats;
type MultiStats = import("webpack").MultiStats;
type IncomingMessage = import("../index.js").IncomingMessage;
type ServerResponse = import("../index.js").ServerResponse;
