{{# def.definitions ***REMOVED******REMOVED***
{{# def.errors ***REMOVED******REMOVED***
{{# def.setupKeyword ***REMOVED******REMOVED***
{{# def.setupNextLevel ***REMOVED******REMOVED***


{{## def.validateItems:startFrom:
  for (var {{=$idx***REMOVED******REMOVED*** = {{=startFrom***REMOVED******REMOVED***; {{=$idx***REMOVED******REMOVED*** < {{=$data***REMOVED******REMOVED***.length; {{=$idx***REMOVED******REMOVED***++) {
    {{
      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);
      var $passData = $data + '[' + $idx + ']';
      $it.dataPathArr[$dataNxt] = $idx;
    ***REMOVED******REMOVED***

    {{# def.generateSubschemaCode ***REMOVED******REMOVED***
    {{# def.optimizeValidate ***REMOVED******REMOVED***

    {{? $breakOnError ***REMOVED******REMOVED***
      if (!{{=$nextValid***REMOVED******REMOVED***) break;
    {{?***REMOVED******REMOVED***
  ***REMOVED***
#***REMOVED******REMOVED***

{{
  var $idx = 'i' + $lvl
    , $dataNxt = $it.dataLevel = it.dataLevel + 1
    , $nextData = 'data' + $dataNxt
    , $currentBaseId = it.baseId;
***REMOVED******REMOVED***

var {{=$errs***REMOVED******REMOVED*** = errors;
var {{=$valid***REMOVED******REMOVED***;

{{? Array.isArray($schema) ***REMOVED******REMOVED***
  {{ /* 'items' is an array of schemas */***REMOVED******REMOVED***
  {{ var $additionalItems = it.schema.additionalItems; ***REMOVED******REMOVED***
  {{? $additionalItems === false ***REMOVED******REMOVED***
    {{=$valid***REMOVED******REMOVED*** = {{=$data***REMOVED******REMOVED***.length <= {{= $schema.length ***REMOVED******REMOVED***;
    {{
      var $currErrSchemaPath = $errSchemaPath;
      $errSchemaPath = it.errSchemaPath + '/additionalItems';      
    ***REMOVED******REMOVED***
    {{# def.checkError:'additionalItems' ***REMOVED******REMOVED***
    {{ $errSchemaPath = $currErrSchemaPath; ***REMOVED******REMOVED***
    {{# def.elseIfValid***REMOVED******REMOVED***
  {{?***REMOVED******REMOVED***

  {{~ $schema:$sch:$i ***REMOVED******REMOVED***
    {{? {{# def.nonEmptySchema:$sch ***REMOVED******REMOVED*** ***REMOVED******REMOVED***
      {{=$nextValid***REMOVED******REMOVED*** = true;

      if ({{=$data***REMOVED******REMOVED***.length > {{=$i***REMOVED******REMOVED***) {
        {{
          var $passData = $data + '[' + $i + ']';
          $it.schema = $sch;
          $it.schemaPath = $schemaPath + '[' + $i + ']';
          $it.errSchemaPath = $errSchemaPath + '/' + $i;
          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);
          $it.dataPathArr[$dataNxt] = $i;
        ***REMOVED******REMOVED***

        {{# def.generateSubschemaCode ***REMOVED******REMOVED***
        {{# def.optimizeValidate ***REMOVED******REMOVED***
      ***REMOVED***

      {{# def.ifResultValid ***REMOVED******REMOVED***
    {{?***REMOVED******REMOVED***
  {{~***REMOVED******REMOVED***

  {{? typeof $additionalItems == 'object' && {{# def.nonEmptySchema:$additionalItems ***REMOVED******REMOVED*** ***REMOVED******REMOVED***
    {{
      $it.schema = $additionalItems;
      $it.schemaPath = it.schemaPath + '.additionalItems';
      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';
    ***REMOVED******REMOVED***
    {{=$nextValid***REMOVED******REMOVED*** = true;

    if ({{=$data***REMOVED******REMOVED***.length > {{= $schema.length ***REMOVED******REMOVED***) {
      {{# def.validateItems: $schema.length ***REMOVED******REMOVED***
    ***REMOVED***

    {{# def.ifResultValid ***REMOVED******REMOVED***
  {{?***REMOVED******REMOVED***

{{?? {{# def.nonEmptySchema:$schema ***REMOVED******REMOVED*** ***REMOVED******REMOVED***
  {{ /* 'items' is a single schema */***REMOVED******REMOVED***
  {{
    $it.schema = $schema;
    $it.schemaPath = $schemaPath;
    $it.errSchemaPath = $errSchemaPath;
  ***REMOVED******REMOVED***
  {{# def.validateItems: 0 ***REMOVED******REMOVED***
{{?***REMOVED******REMOVED***

{{? $breakOnError ***REMOVED******REMOVED***
  {{= $closingBraces ***REMOVED******REMOVED***
  if ({{=$errs***REMOVED******REMOVED*** == errors) {
{{?***REMOVED******REMOVED***
