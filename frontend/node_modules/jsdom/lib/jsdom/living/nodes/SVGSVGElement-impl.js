"use strict";

const { mixin ***REMOVED*** = require("../../utils");
const SVGNumber = require("../generated/SVGNumber");
const SVGGraphicsElementImpl = require("./SVGGraphicsElement-impl").implementation;
const WindowEventHandlersImpl = require("./WindowEventHandlers-impl").implementation;
const { domSymbolTree ***REMOVED*** = require("../helpers/internal-constants");
const { ELEMENT_NODE ***REMOVED*** = require("../node-type");

class SVGSVGElementImpl extends SVGGraphicsElementImpl {
  constructor(globalObject, args, privateData) {
    super(globalObject, args, privateData);
    this._proxyWindowEventsToWindow();
  ***REMOVED***

  createSVGNumber() {
    return SVGNumber.createImpl(this._globalObject, [], {***REMOVED***);
  ***REMOVED***

  getElementById(elementId) {
    // TODO: optimize with _ids caching trick; see Document class.
    for (const node of domSymbolTree.treeIterator(this)) {
      if (node.nodeType === ELEMENT_NODE && node.getAttributeNS(null, "id") === elementId) {
        return node;
      ***REMOVED***
    ***REMOVED***
    return null;
  ***REMOVED***

  suspendRedraw() {
    return 1;
  ***REMOVED***
  unsuspendRedraw() {***REMOVED***
  unsuspendRedrawAll() {***REMOVED***
  forceRedraw() {***REMOVED***
***REMOVED***

mixin(SVGSVGElementImpl.prototype, WindowEventHandlersImpl.prototype);

module.exports = {
  implementation: SVGSVGElementImpl
***REMOVED***;
