/**
 * @fileoverview Default configuration
 * @author Nicholas C. Zakas
 */

"use strict";

//-----------------------------------------------------------------------------
// Requirements
//-----------------------------------------------------------------------------

const Rules = require("../rules");

//-----------------------------------------------------------------------------
// Helpers
//-----------------------------------------------------------------------------

const sharedDefaultConfig = [
	// intentionally empty config to ensure these files are globbed by default
	{
		files: ["**/*.js", "**/*.mjs"],
	***REMOVED***,
	{
		files: ["**/*.cjs"],
		languageOptions: {
			sourceType: "commonjs",
			ecmaVersion: "latest",
		***REMOVED***,
	***REMOVED***,
];

exports.defaultConfig = Object.freeze([
	{
		plugins: {
			"@": {
				languages: {
					js: require("../languages/js"),
				***REMOVED***,

				/*
				 * Because we try to delay loading rules until absolutely
				 * necessary, a proxy allows us to hook into the lazy-loading
				 * aspect of the rules map while still keeping all of the
				 * relevant configuration inside of the config array.
				 */
				rules: new Proxy(
					{***REMOVED***,
					{
						get(target, property) {
							return Rules.get(property);
						***REMOVED***,

						has(target, property) {
							return Rules.has(property);
						***REMOVED***,
					***REMOVED***,
				),
			***REMOVED***,
		***REMOVED***,
		language: "@/js",
		linterOptions: {
			reportUnusedDisableDirectives: 1,
		***REMOVED***,
	***REMOVED***,

	// default ignores are listed here
	{
		ignores: ["**/node_modules/", ".git/"],
	***REMOVED***,

	...sharedDefaultConfig,
]);

exports.defaultRuleTesterConfig = Object.freeze([
	{ files: ["**"] ***REMOVED***, // Make sure the default config matches for all files

	...sharedDefaultConfig,
]);
