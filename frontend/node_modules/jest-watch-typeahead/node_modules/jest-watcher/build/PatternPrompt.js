'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
***REMOVED***);
exports.default = void 0;

function _ansiEscapes() {
  const data = _interopRequireDefault(require('ansi-escapes'));

  _ansiEscapes = function () {
    return data;
  ***REMOVED***;

  return data;
***REMOVED***

function _chalk() {
  const data = _interopRequireDefault(require('chalk'));

  _chalk = function () {
    return data;
  ***REMOVED***;

  return data;
***REMOVED***

function _jestUtil() {
  const data = require('jest-util');

  _jestUtil = function () {
    return data;
  ***REMOVED***;

  return data;
***REMOVED***

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {default: obj***REMOVED***;
***REMOVED***

/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
const {CLEAR***REMOVED*** = _jestUtil().specialChars;

const usage = entity =>
  `\n${_chalk().default.bold('Pattern Mode Usage')***REMOVED***\n` +
  ` ${_chalk().default.dim('\u203A Press')***REMOVED*** Esc ${_chalk().default.dim(
    'to exit pattern mode.'
  )***REMOVED***\n` +
  ` ${_chalk().default.dim('\u203A Press')***REMOVED*** Enter ` +
  `${_chalk().default.dim(`to filter by a ${entity***REMOVED*** regex pattern.`)***REMOVED***\n` +
  '\n';

const usageRows = usage('').split('\n').length;

class PatternPrompt {
  _currentUsageRows;

  constructor(_pipe, _prompt, _entityName = '') {
    this._pipe = _pipe;
    this._prompt = _prompt;
    this._entityName = _entityName;
    this._currentUsageRows = usageRows;
  ***REMOVED***

  run(onSuccess, onCancel, options) {
    this._pipe.write(_ansiEscapes().default.cursorHide);

    this._pipe.write(CLEAR);

    if (options && options.header) {
      this._pipe.write(`${options.header***REMOVED***\n`);

      this._currentUsageRows = usageRows + options.header.split('\n').length;
    ***REMOVED*** else {
      this._currentUsageRows = usageRows;
    ***REMOVED***

    this._pipe.write(usage(this._entityName));

    this._pipe.write(_ansiEscapes().default.cursorShow);

    this._prompt.enter(this._onChange.bind(this), onSuccess, onCancel);
  ***REMOVED***

  _onChange(_pattern, _options) {
    this._pipe.write(_ansiEscapes().default.eraseLine);

    this._pipe.write(_ansiEscapes().default.cursorLeft);
  ***REMOVED***
***REMOVED***

exports.default = PatternPrompt;
