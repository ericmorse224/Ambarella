/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

const {
	JAVASCRIPT_MODULE_TYPE_AUTO,
	JAVASCRIPT_MODULE_TYPE_DYNAMIC,
	JAVASCRIPT_MODULE_TYPE_ESM
***REMOVED*** = require("./ModuleTypeConstants");
const ConstDependency = require("./dependencies/ConstDependency");

/** @typedef {import("../declarations/WebpackOptions").JavascriptParserOptions***REMOVED*** JavascriptParserOptions */
/** @typedef {import("./Compiler")***REMOVED*** Compiler */
/** @typedef {import("./Dependency").DependencyLocation***REMOVED*** DependencyLocation */
/** @typedef {import("./Module").BuildInfo***REMOVED*** BuildInfo */
/** @typedef {import("./javascript/JavascriptParser")***REMOVED*** JavascriptParser */
/** @typedef {import("./javascript/JavascriptParser").Range***REMOVED*** Range */

const PLUGIN_NAME = "UseStrictPlugin";

class UseStrictPlugin {
	/**
	 * Apply the plugin
	 * @param {Compiler***REMOVED*** compiler the compiler instance
	 * @returns {void***REMOVED***
	 */
	apply(compiler) {
		compiler.hooks.compilation.tap(
			PLUGIN_NAME,
			(compilation, { normalModuleFactory ***REMOVED***) => {
				/**
				 * @param {JavascriptParser***REMOVED*** parser the parser
				 * @param {JavascriptParserOptions***REMOVED*** parserOptions the javascript parser options
				 */
				const handler = (parser, parserOptions) => {
					parser.hooks.program.tap(PLUGIN_NAME, ast => {
						const firstNode = ast.body[0];
						if (
							firstNode &&
							firstNode.type === "ExpressionStatement" &&
							firstNode.expression.type === "Literal" &&
							firstNode.expression.value === "use strict"
						) {
							// Remove "use strict" expression. It will be added later by the renderer again.
							// This is necessary in order to not break the strict mode when webpack prepends code.
							// @see https://github.com/webpack/webpack/issues/1970
							const dep = new ConstDependency(
								"",
								/** @type {Range***REMOVED*** */ (firstNode.range)
							);
							dep.loc = /** @type {DependencyLocation***REMOVED*** */ (firstNode.loc);
							parser.state.module.addPresentationalDependency(dep);
							/** @type {BuildInfo***REMOVED*** */
							(parser.state.module.buildInfo).strict = true;
						***REMOVED***
						if (parserOptions.overrideStrict) {
							/** @type {BuildInfo***REMOVED*** */
							(parser.state.module.buildInfo).strict =
								parserOptions.overrideStrict === "strict";
						***REMOVED***
					***REMOVED***);
				***REMOVED***;

				normalModuleFactory.hooks.parser
					.for(JAVASCRIPT_MODULE_TYPE_AUTO)
					.tap(PLUGIN_NAME, handler);
				normalModuleFactory.hooks.parser
					.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC)
					.tap(PLUGIN_NAME, handler);
				normalModuleFactory.hooks.parser
					.for(JAVASCRIPT_MODULE_TYPE_ESM)
					.tap(PLUGIN_NAME, handler);
			***REMOVED***
		);
	***REMOVED***
***REMOVED***

module.exports = UseStrictPlugin;
