import { dirname, resolve ***REMOVED*** from 'path';
import { readdir, stat ***REMOVED*** from 'fs';
import { promisify ***REMOVED*** from 'util';

const toStats = promisify(stat);
const toRead = promisify(readdir);

export default async function (start, callback) {
	let dir = resolve('.', start);
	let tmp, stats = await toStats(dir);

	if (!stats.isDirectory()) {
		dir = dirname(dir);
	***REMOVED***

	while (true) {
		tmp = await callback(dir, await toRead(dir));
		if (tmp) return resolve(dir, tmp);
		dir = dirname(tmp = dir);
		if (tmp === dir) break;
	***REMOVED***
***REMOVED***
