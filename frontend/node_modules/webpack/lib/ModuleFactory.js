/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

/** @typedef {import("../declarations/WebpackOptions").ResolveOptions***REMOVED*** ResolveOptions */
/** @typedef {import("./Dependency")***REMOVED*** Dependency */
/** @typedef {import("./Module")***REMOVED*** Module */

/**
 * @typedef {object***REMOVED*** ModuleFactoryResult
 * @property {Module=***REMOVED*** module the created module or unset if no module was created
 * @property {Set<string>=***REMOVED*** fileDependencies
 * @property {Set<string>=***REMOVED*** contextDependencies
 * @property {Set<string>=***REMOVED*** missingDependencies
 * @property {boolean=***REMOVED*** cacheable allow to use the unsafe cache
 */

/** @typedef {string | null***REMOVED*** IssuerLayer */

/**
 * @typedef {object***REMOVED*** ModuleFactoryCreateDataContextInfo
 * @property {string***REMOVED*** issuer
 * @property {IssuerLayer=***REMOVED*** issuerLayer
 * @property {string=***REMOVED*** compiler
 */

/**
 * @typedef {object***REMOVED*** ModuleFactoryCreateData
 * @property {ModuleFactoryCreateDataContextInfo***REMOVED*** contextInfo
 * @property {ResolveOptions=***REMOVED*** resolveOptions
 * @property {string***REMOVED*** context
 * @property {Dependency[]***REMOVED*** dependencies
 */

/**
 * @typedef {(err?: Error | null, result?: ModuleFactoryResult) => void***REMOVED*** ModuleFactoryCallback
 */

class ModuleFactory {
	/* istanbul ignore next */
	/**
	 * @abstract
	 * @param {ModuleFactoryCreateData***REMOVED*** data data object
	 * @param {ModuleFactoryCallback***REMOVED*** callback callback
	 * @returns {void***REMOVED***
	 */
	create(data, callback) {
		const AbstractMethodError = require("./AbstractMethodError");
		throw new AbstractMethodError();
	***REMOVED***
***REMOVED***

module.exports = ModuleFactory;
