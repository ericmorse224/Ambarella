{{# def.definitions ***REMOVED******REMOVED***
{{# def.errors ***REMOVED******REMOVED***
{{# def.missing ***REMOVED******REMOVED***
{{# def.setupKeyword ***REMOVED******REMOVED***
{{# def.setupNextLevel ***REMOVED******REMOVED***


{{## def.propertyInData:
  {{=$data***REMOVED******REMOVED***{{= it.util.getProperty($property) ***REMOVED******REMOVED*** !== undefined
  {{? $ownProperties ***REMOVED******REMOVED***
    && Object.prototype.hasOwnProperty.call({{=$data***REMOVED******REMOVED***, '{{=it.util.escapeQuotes($property)***REMOVED******REMOVED***')
  {{?***REMOVED******REMOVED***
#***REMOVED******REMOVED***


{{
  var $schemaDeps = {***REMOVED***
    , $propertyDeps = {***REMOVED***
    , $ownProperties = it.opts.ownProperties;

  for ($property in $schema) {
    if ($property == '__proto__') continue;
    var $sch = $schema[$property];
    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;
    $deps[$property] = $sch;
  ***REMOVED***
***REMOVED******REMOVED***

var {{=$errs***REMOVED******REMOVED*** = errors;

{{ var $currentErrorPath = it.errorPath; ***REMOVED******REMOVED***

var missing{{=$lvl***REMOVED******REMOVED***;
{{ for (var $property in $propertyDeps) { ***REMOVED******REMOVED***
  {{ $deps = $propertyDeps[$property]; ***REMOVED******REMOVED***
  {{? $deps.length ***REMOVED******REMOVED***
    if ({{# def.propertyInData ***REMOVED******REMOVED***
      {{? $breakOnError ***REMOVED******REMOVED***
          && ({{# def.checkMissingProperty:$deps ***REMOVED******REMOVED***)) {
          {{# def.errorMissingProperty:'dependencies' ***REMOVED******REMOVED***
      {{??***REMOVED******REMOVED***
        ) {
          {{~ $deps:$propertyKey ***REMOVED******REMOVED***
            {{# def.allErrorsMissingProperty:'dependencies' ***REMOVED******REMOVED***
          {{~***REMOVED******REMOVED***
      {{?***REMOVED******REMOVED***
    ***REMOVED*** {{# def.elseIfValid ***REMOVED******REMOVED***
  {{?***REMOVED******REMOVED***
{{ ***REMOVED*** ***REMOVED******REMOVED***

{{
  it.errorPath = $currentErrorPath;
  var $currentBaseId = $it.baseId;
***REMOVED******REMOVED***


{{ for (var $property in $schemaDeps) { ***REMOVED******REMOVED***
  {{ var $sch = $schemaDeps[$property]; ***REMOVED******REMOVED***
  {{? {{# def.nonEmptySchema:$sch ***REMOVED******REMOVED*** ***REMOVED******REMOVED***
    {{=$nextValid***REMOVED******REMOVED*** = true;

    if ({{# def.propertyInData ***REMOVED******REMOVED***) {
      {{ 
        $it.schema = $sch;
        $it.schemaPath = $schemaPath + it.util.getProperty($property);
        $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);
      ***REMOVED******REMOVED***

      {{# def.insertSubschemaCode ***REMOVED******REMOVED***
    ***REMOVED***

    {{# def.ifResultValid ***REMOVED******REMOVED***
  {{?***REMOVED******REMOVED***
{{ ***REMOVED*** ***REMOVED******REMOVED***

{{? $breakOnError ***REMOVED******REMOVED*** 
  {{= $closingBraces ***REMOVED******REMOVED***
  if ({{=$errs***REMOVED******REMOVED*** == errors) {
{{?***REMOVED******REMOVED***
