import { RawSourceMap ***REMOVED*** from 'source-map';
/**
 * Adapted from https://github.com/nsams/sourcemap-aware-replace, with modern
 * JavaScript updates, along with additional properties copied from originalMap.
 *
 * @param {Object***REMOVED*** options
 * @param {string***REMOVED*** options.jsFilename The name for the file whose contents
 * correspond to originalSource.
 * @param {Object***REMOVED*** options.originalMap The sourcemap for originalSource,
 * prior to any replacements.
 * @param {string***REMOVED*** options.originalSource The source code, prior to any
 * replacements.
 * @param {string***REMOVED*** options.replaceString A string to swap in for searchString.
 * @param {string***REMOVED*** options.searchString A string in originalSource to replace.
 * Only the first occurrence will be replaced.
 * @return {{source: string, map: string***REMOVED******REMOVED*** An object containing both
 * originalSource with the replacement applied, and the modified originalMap.
 *
 * @private
 */
export declare function replaceAndUpdateSourceMap({ jsFilename, originalMap, originalSource, replaceString, searchString, ***REMOVED***: {
    jsFilename: string;
    originalMap: RawSourceMap;
    originalSource: string;
    replaceString: string;
    searchString: string;
***REMOVED***): Promise<{
    map: string;
    source: string;
***REMOVED***>;
