/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

const { SyncBailHook ***REMOVED*** = require("tapable");
const { Logger ***REMOVED*** = require("./Logger");
const createConsoleLogger = require("./createConsoleLogger");

/** @type {createConsoleLogger.LoggerOptions***REMOVED*** */
const currentDefaultLoggerOptions = {
	level: "info",
	debug: false,
	console
***REMOVED***;
let currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);

/**
 * @param {string***REMOVED*** name name of the logger
 * @returns {Logger***REMOVED*** a logger
 */
module.exports.getLogger = name =>
	new Logger(
		(type, args) => {
			if (module.exports.hooks.log.call(name, type, args) === undefined) {
				currentDefaultLogger(name, type, args);
			***REMOVED***
		***REMOVED***,
		childName => module.exports.getLogger(`${name***REMOVED***/${childName***REMOVED***`)
	);

/**
 * @param {createConsoleLogger.LoggerOptions***REMOVED*** options new options, merge with old options
 * @returns {void***REMOVED***
 */
module.exports.configureDefaultLogger = options => {
	Object.assign(currentDefaultLoggerOptions, options);
	currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);
***REMOVED***;

module.exports.hooks = {
	log: new SyncBailHook(["origin", "type", "args"])
***REMOVED***;
