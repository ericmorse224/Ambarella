{{# def.definitions ***REMOVED******REMOVED***
{{# def.errors ***REMOVED******REMOVED***
{{# def.setupKeyword ***REMOVED******REMOVED***
{{# def.setupNextLevel ***REMOVED******REMOVED***


{{## def.validateAdditional:
  {{ /* additionalProperties is schema */
    $it.schema = $aProperties;
    $it.schemaPath = it.schemaPath + '.additionalProperties';
    $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';
    $it.errorPath = it.opts._errorDataPathProperty
                    ? it.errorPath
                    : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
    var $passData = $data + '[' + $key + ']';
    $it.dataPathArr[$dataNxt] = $key;
  ***REMOVED******REMOVED***

  {{# def.generateSubschemaCode ***REMOVED******REMOVED***
  {{# def.optimizeValidate ***REMOVED******REMOVED***
#***REMOVED******REMOVED***


{{
  var $key = 'key' + $lvl
    , $idx = 'idx' + $lvl
    , $dataNxt = $it.dataLevel = it.dataLevel + 1
    , $nextData = 'data' + $dataNxt
    , $dataProperties = 'dataProperties' + $lvl;

  var $schemaKeys = Object.keys($schema || {***REMOVED***).filter(notProto)
    , $pProperties = it.schema.patternProperties || {***REMOVED***
    , $pPropertyKeys = Object.keys($pProperties).filter(notProto)
    , $aProperties = it.schema.additionalProperties
    , $someProperties = $schemaKeys.length || $pPropertyKeys.length
    , $noAdditional = $aProperties === false
    , $additionalIsSchema = typeof $aProperties == 'object'
                              && Object.keys($aProperties).length
    , $removeAdditional = it.opts.removeAdditional
    , $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional
    , $ownProperties = it.opts.ownProperties
    , $currentBaseId = it.baseId;

  var $required = it.schema.required;
  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) {
    var $requiredHash = it.util.toHash($required);
  ***REMOVED***

  function notProto(p) { return p !== '__proto__'; ***REMOVED***
***REMOVED******REMOVED***


var {{=$errs***REMOVED******REMOVED*** = errors;
var {{=$nextValid***REMOVED******REMOVED*** = true;
{{? $ownProperties ***REMOVED******REMOVED***
  var {{=$dataProperties***REMOVED******REMOVED*** = undefined;
{{?***REMOVED******REMOVED***

{{? $checkAdditional ***REMOVED******REMOVED***
  {{# def.iterateProperties ***REMOVED******REMOVED***
    {{? $someProperties ***REMOVED******REMOVED***
      var isAdditional{{=$lvl***REMOVED******REMOVED*** = !(false
        {{? $schemaKeys.length ***REMOVED******REMOVED***
          {{? $schemaKeys.length > 8 ***REMOVED******REMOVED***
            || validate.schema{{=$schemaPath***REMOVED******REMOVED***.hasOwnProperty({{=$key***REMOVED******REMOVED***)
          {{??***REMOVED******REMOVED***
            {{~ $schemaKeys:$propertyKey ***REMOVED******REMOVED***
              || {{=$key***REMOVED******REMOVED*** == {{= it.util.toQuotedString($propertyKey) ***REMOVED******REMOVED***
            {{~***REMOVED******REMOVED***
          {{?***REMOVED******REMOVED***
        {{?***REMOVED******REMOVED***
        {{? $pPropertyKeys.length ***REMOVED******REMOVED***
          {{~ $pPropertyKeys:$pProperty:$i ***REMOVED******REMOVED***
            || {{= it.usePattern($pProperty) ***REMOVED******REMOVED***.test({{=$key***REMOVED******REMOVED***)
          {{~***REMOVED******REMOVED***
        {{?***REMOVED******REMOVED***
      );

      if (isAdditional{{=$lvl***REMOVED******REMOVED***) {
    {{?***REMOVED******REMOVED***
    {{? $removeAdditional == 'all' ***REMOVED******REMOVED***
      delete {{=$data***REMOVED******REMOVED***[{{=$key***REMOVED******REMOVED***];
    {{??***REMOVED******REMOVED***
      {{
        var $currentErrorPath = it.errorPath;
        var $additionalProperty = '\' + ' + $key + ' + \'';
        if (it.opts._errorDataPathProperty) {
          it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
        ***REMOVED***
      ***REMOVED******REMOVED***
      {{? $noAdditional ***REMOVED******REMOVED***
        {{? $removeAdditional ***REMOVED******REMOVED***
          delete {{=$data***REMOVED******REMOVED***[{{=$key***REMOVED******REMOVED***];
        {{??***REMOVED******REMOVED***
          {{=$nextValid***REMOVED******REMOVED*** = false;
          {{
            var $currErrSchemaPath = $errSchemaPath;
            $errSchemaPath = it.errSchemaPath + '/additionalProperties';
          ***REMOVED******REMOVED***
          {{# def.error:'additionalProperties' ***REMOVED******REMOVED***
          {{ $errSchemaPath = $currErrSchemaPath; ***REMOVED******REMOVED***
          {{? $breakOnError ***REMOVED******REMOVED*** break; {{?***REMOVED******REMOVED***
        {{?***REMOVED******REMOVED***
      {{?? $additionalIsSchema ***REMOVED******REMOVED***
        {{? $removeAdditional == 'failing' ***REMOVED******REMOVED***
          var {{=$errs***REMOVED******REMOVED*** = errors;
          {{# def.setCompositeRule ***REMOVED******REMOVED***

          {{# def.validateAdditional ***REMOVED******REMOVED***

          if (!{{=$nextValid***REMOVED******REMOVED***) {
            errors = {{=$errs***REMOVED******REMOVED***;
            if (validate.errors !== null) {
              if (errors) validate.errors.length = errors;
              else validate.errors = null;
            ***REMOVED***
            delete {{=$data***REMOVED******REMOVED***[{{=$key***REMOVED******REMOVED***];
          ***REMOVED***

          {{# def.resetCompositeRule ***REMOVED******REMOVED***
        {{??***REMOVED******REMOVED***
          {{# def.validateAdditional ***REMOVED******REMOVED***
          {{? $breakOnError ***REMOVED******REMOVED*** if (!{{=$nextValid***REMOVED******REMOVED***) break; {{?***REMOVED******REMOVED***
        {{?***REMOVED******REMOVED***
      {{?***REMOVED******REMOVED***
      {{ it.errorPath = $currentErrorPath; ***REMOVED******REMOVED***
    {{?***REMOVED******REMOVED***
    {{? $someProperties ***REMOVED******REMOVED***
      ***REMOVED***
    {{?***REMOVED******REMOVED***
  ***REMOVED***

  {{# def.ifResultValid ***REMOVED******REMOVED***
{{?***REMOVED******REMOVED***

{{ var $useDefaults = it.opts.useDefaults && !it.compositeRule; ***REMOVED******REMOVED***

{{? $schemaKeys.length ***REMOVED******REMOVED***
  {{~ $schemaKeys:$propertyKey ***REMOVED******REMOVED***
    {{ var $sch = $schema[$propertyKey]; ***REMOVED******REMOVED***

    {{? {{# def.nonEmptySchema:$sch***REMOVED******REMOVED*** ***REMOVED******REMOVED***
      {{
        var $prop = it.util.getProperty($propertyKey)
          , $passData = $data + $prop
          , $hasDefault = $useDefaults && $sch.default !== undefined;
        $it.schema = $sch;
        $it.schemaPath = $schemaPath + $prop;
        $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);
        $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);
        $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);
      ***REMOVED******REMOVED***

      {{# def.generateSubschemaCode ***REMOVED******REMOVED***

      {{? {{# def.willOptimize ***REMOVED******REMOVED*** ***REMOVED******REMOVED***
        {{
          $code = {{# def._optimizeValidate ***REMOVED******REMOVED***;
          var $useData = $passData;
        ***REMOVED******REMOVED***
      {{??***REMOVED******REMOVED***
        {{ var $useData = $nextData; ***REMOVED******REMOVED***
        var {{=$nextData***REMOVED******REMOVED*** = {{=$passData***REMOVED******REMOVED***;
      {{?***REMOVED******REMOVED***

      {{? $hasDefault ***REMOVED******REMOVED***
        {{= $code ***REMOVED******REMOVED***
      {{??***REMOVED******REMOVED***
        {{? $requiredHash && $requiredHash[$propertyKey] ***REMOVED******REMOVED***
          if ({{# def.noPropertyInData ***REMOVED******REMOVED***) {
            {{=$nextValid***REMOVED******REMOVED*** = false;
            {{
              var $currentErrorPath = it.errorPath
                , $currErrSchemaPath = $errSchemaPath
                , $missingProperty = it.util.escapeQuotes($propertyKey);
              if (it.opts._errorDataPathProperty) {
                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);
              ***REMOVED***
              $errSchemaPath = it.errSchemaPath + '/required';
            ***REMOVED******REMOVED***
            {{# def.error:'required' ***REMOVED******REMOVED***
            {{ $errSchemaPath = $currErrSchemaPath; ***REMOVED******REMOVED***
            {{ it.errorPath = $currentErrorPath; ***REMOVED******REMOVED***
          ***REMOVED*** else {
        {{??***REMOVED******REMOVED***
          {{? $breakOnError ***REMOVED******REMOVED***
            if ({{# def.noPropertyInData ***REMOVED******REMOVED***) {
              {{=$nextValid***REMOVED******REMOVED*** = true;
            ***REMOVED*** else {
          {{??***REMOVED******REMOVED***
            if ({{=$useData***REMOVED******REMOVED*** !== undefined
              {{? $ownProperties ***REMOVED******REMOVED***
                && {{# def.isOwnProperty ***REMOVED******REMOVED***
              {{?***REMOVED******REMOVED***
            ) {
          {{?***REMOVED******REMOVED***
        {{?***REMOVED******REMOVED***

          {{= $code ***REMOVED******REMOVED***
        ***REMOVED***
      {{?***REMOVED******REMOVED***  {{ /* $hasDefault */ ***REMOVED******REMOVED***
    {{?***REMOVED******REMOVED*** {{ /* def.nonEmptySchema */ ***REMOVED******REMOVED***

    {{# def.ifResultValid ***REMOVED******REMOVED***
  {{~***REMOVED******REMOVED***
{{?***REMOVED******REMOVED***

{{? $pPropertyKeys.length ***REMOVED******REMOVED***
  {{~ $pPropertyKeys:$pProperty ***REMOVED******REMOVED***
    {{ var $sch = $pProperties[$pProperty]; ***REMOVED******REMOVED***

    {{? {{# def.nonEmptySchema:$sch***REMOVED******REMOVED*** ***REMOVED******REMOVED***
      {{
        $it.schema = $sch;
        $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);
        $it.errSchemaPath = it.errSchemaPath + '/patternProperties/'
                                             + it.util.escapeFragment($pProperty);
      ***REMOVED******REMOVED***

      {{# def.iterateProperties ***REMOVED******REMOVED***
        if ({{= it.usePattern($pProperty) ***REMOVED******REMOVED***.test({{=$key***REMOVED******REMOVED***)) {
          {{
            $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
            var $passData = $data + '[' + $key + ']';
            $it.dataPathArr[$dataNxt] = $key;
          ***REMOVED******REMOVED***

          {{# def.generateSubschemaCode ***REMOVED******REMOVED***
          {{# def.optimizeValidate ***REMOVED******REMOVED***

          {{? $breakOnError ***REMOVED******REMOVED*** if (!{{=$nextValid***REMOVED******REMOVED***) break; {{?***REMOVED******REMOVED***
        ***REMOVED***
        {{? $breakOnError ***REMOVED******REMOVED*** else {{=$nextValid***REMOVED******REMOVED*** = true; {{?***REMOVED******REMOVED***
      ***REMOVED***

      {{# def.ifResultValid ***REMOVED******REMOVED***
    {{?***REMOVED******REMOVED*** {{ /* def.nonEmptySchema */ ***REMOVED******REMOVED***
  {{~***REMOVED******REMOVED***
{{?***REMOVED******REMOVED***


{{? $breakOnError ***REMOVED******REMOVED***
  {{= $closingBraces ***REMOVED******REMOVED***
  if ({{=$errs***REMOVED******REMOVED*** == errors) {
{{?***REMOVED******REMOVED***
