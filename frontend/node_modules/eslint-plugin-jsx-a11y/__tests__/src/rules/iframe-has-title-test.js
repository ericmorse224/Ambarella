/**
 * @fileoverview Enforce iframe elements have a title attribute.
 * @author Ethan Cohen
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

import { RuleTester ***REMOVED*** from 'eslint';
import parserOptionsMapper from '../../__util__/parserOptionsMapper';
import parsers from '../../__util__/helpers/parsers';
import rule from '../../../src/rules/iframe-has-title';

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

const ruleTester = new RuleTester();

const expectedError = {
  message: '<iframe> elements must have a unique title property.',
  type: 'JSXOpeningElement',
***REMOVED***;

const componentsSettings = {
  'jsx-a11y': {
    components: {
      FooComponent: 'iframe',
    ***REMOVED***,
  ***REMOVED***,
***REMOVED***;

ruleTester.run('html-has-lang', rule, {
  valid: parsers.all([].concat(
    { code: '<div />;' ***REMOVED***,
    { code: '<iframe title="Unique title" />' ***REMOVED***,
    { code: '<iframe title={foo***REMOVED*** />' ***REMOVED***,
    { code: '<FooComponent />' ***REMOVED***,
    { code: '<FooComponent title="Unique title" />', settings: componentsSettings ***REMOVED***,
  )).map(parserOptionsMapper),
  invalid: parsers.all([].concat(
    { code: '<iframe />', errors: [expectedError] ***REMOVED***,
    { code: '<iframe {...props***REMOVED*** />', errors: [expectedError] ***REMOVED***,
    { code: '<iframe title={undefined***REMOVED*** />', errors: [expectedError] ***REMOVED***,
    { code: '<iframe title="" />', errors: [expectedError] ***REMOVED***,
    { code: '<iframe title={false***REMOVED*** />', errors: [expectedError] ***REMOVED***,
    { code: '<iframe title={true***REMOVED*** />', errors: [expectedError] ***REMOVED***,
    { code: "<iframe title={''***REMOVED*** />", errors: [expectedError] ***REMOVED***,
    { code: '<iframe title={``***REMOVED*** />', errors: [expectedError] ***REMOVED***,
    { code: '<iframe title={""***REMOVED*** />', errors: [expectedError] ***REMOVED***,
    { code: '<iframe title={42***REMOVED*** />', errors: [expectedError] ***REMOVED***,
    { code: '<FooComponent />', errors: [expectedError], settings: componentsSettings ***REMOVED***,
  )).map(parserOptionsMapper),
***REMOVED***);
