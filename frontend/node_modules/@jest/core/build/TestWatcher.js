'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
***REMOVED***);
exports.default = void 0;

function _emittery() {
  const data = _interopRequireDefault(require('emittery'));

  _emittery = function () {
    return data;
  ***REMOVED***;

  return data;
***REMOVED***

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {default: obj***REMOVED***;
***REMOVED***

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    ***REMOVED***);
  ***REMOVED*** else {
    obj[key] = value;
  ***REMOVED***
  return obj;
***REMOVED***

class TestWatcher extends _emittery().default {
  constructor({isWatchMode***REMOVED***) {
    super();

    _defineProperty(this, 'state', void 0);

    _defineProperty(this, '_isWatchMode', void 0);

    this.state = {
      interrupted: false
    ***REMOVED***;
    this._isWatchMode = isWatchMode;
  ***REMOVED***

  async setState(state) {
    Object.assign(this.state, state);
    await this.emit('change', this.state);
  ***REMOVED***

  isInterrupted() {
    return this.state.interrupted;
  ***REMOVED***

  isWatchMode() {
    return this._isWatchMode;
  ***REMOVED***
***REMOVED***

exports.default = TestWatcher;
