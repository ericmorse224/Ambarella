{"ast":null,"code":"/**\n *\n * @param {Error***REMOVED*** error\n */\nfunction parseErrorToStacks(error) {\n  if (!error || !(error instanceof Error)) {\n    throw new Error(\"parseErrorToStacks expects Error object\");\n  ***REMOVED***\n  if (typeof error.stack === \"string\") {\n    return error.stack.split(\"\\n\").filter(function (stack) {\n      return stack !== \"Error: \".concat(error.message);\n    ***REMOVED***);\n  ***REMOVED***\n***REMOVED***\n\n/**\n * @callback ErrorCallback\n * @param {ErrorEvent***REMOVED*** error\n * @returns {void***REMOVED***\n */\n\n/**\n * @param {ErrorCallback***REMOVED*** callback\n */\nfunction listenToRuntimeError(callback) {\n  window.addEventListener(\"error\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"error\", callback);\n  ***REMOVED***;\n***REMOVED***\n\n/**\n * @callback UnhandledRejectionCallback\n * @param {PromiseRejectionEvent***REMOVED*** rejectionEvent\n * @returns {void***REMOVED***\n */\n\n/**\n * @param {UnhandledRejectionCallback***REMOVED*** callback\n */\nfunction listenToUnhandledRejection(callback) {\n  window.addEventListener(\"unhandledrejection\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"unhandledrejection\", callback);\n  ***REMOVED***;\n***REMOVED***\nexport { listenToRuntimeError, listenToUnhandledRejection, parseErrorToStacks ***REMOVED***;","map":{"version":3,"names":["parseErrorToStacks","error","Error","stack","split","filter","concat","message","listenToRuntimeError","callback","window","addEventListener","cleanup","removeEventListener","listenToUnhandledRejection"],"sources":["C:/Users/bandi/meeting-summary-dashboard/frontend/node_modules/webpack-dev-server/client/overlay/runtime-error.js"],"sourcesContent":["/**\n *\n * @param {Error***REMOVED*** error\n */\nfunction parseErrorToStacks(error) {\n  if (!error || !(error instanceof Error)) {\n    throw new Error(\"parseErrorToStacks expects Error object\");\n  ***REMOVED***\n  if (typeof error.stack === \"string\") {\n    return error.stack.split(\"\\n\").filter(function (stack) {\n      return stack !== \"Error: \".concat(error.message);\n    ***REMOVED***);\n  ***REMOVED***\n***REMOVED***\n\n/**\n * @callback ErrorCallback\n * @param {ErrorEvent***REMOVED*** error\n * @returns {void***REMOVED***\n */\n\n/**\n * @param {ErrorCallback***REMOVED*** callback\n */\nfunction listenToRuntimeError(callback) {\n  window.addEventListener(\"error\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"error\", callback);\n  ***REMOVED***;\n***REMOVED***\n\n/**\n * @callback UnhandledRejectionCallback\n * @param {PromiseRejectionEvent***REMOVED*** rejectionEvent\n * @returns {void***REMOVED***\n */\n\n/**\n * @param {UnhandledRejectionCallback***REMOVED*** callback\n */\nfunction listenToUnhandledRejection(callback) {\n  window.addEventListener(\"unhandledrejection\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"unhandledrejection\", callback);\n  ***REMOVED***;\n***REMOVED***\nexport { listenToRuntimeError, listenToUnhandledRejection, parseErrorToStacks ***REMOVED***;"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,kBAAkBA,CAACC,KAAK,EAAE;EACjC,IAAI,CAACA,KAAK,IAAI,EAAEA,KAAK,YAAYC,KAAK,CAAC,EAAE;IACvC,MAAM,IAAIA,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EACA,IAAI,OAAOD,KAAK,CAACE,KAAK,KAAK,QAAQ,EAAE;IACnC,OAAOF,KAAK,CAACE,KAAK,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAAC,UAAUF,KAAK,EAAE;MACrD,OAAOA,KAAK,KAAK,SAAS,CAACG,MAAM,CAACL,KAAK,CAACM,OAAO,CAAC;IAClD,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACC,QAAQ,EAAE;EACtCC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEF,QAAQ,CAAC;EAC1C,OAAO,SAASG,OAAOA,CAAA,EAAG;IACxBF,MAAM,CAACG,mBAAmB,CAAC,OAAO,EAAEJ,QAAQ,CAAC;EAC/C,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAASK,0BAA0BA,CAACL,QAAQ,EAAE;EAC5CC,MAAM,CAACC,gBAAgB,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;EACvD,OAAO,SAASG,OAAOA,CAAA,EAAG;IACxBF,MAAM,CAACG,mBAAmB,CAAC,oBAAoB,EAAEJ,QAAQ,CAAC;EAC5D,CAAC;AACH;AACA,SAASD,oBAAoB,EAAEM,0BAA0B,EAAEd,kBAAkB","ignoreList":[]***REMOVED***,"metadata":{***REMOVED***,"sourceType":"module","externalDependencies":[]***REMOVED***