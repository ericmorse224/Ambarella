{{# def.definitions ***REMOVED******REMOVED***
{{# def.errors ***REMOVED******REMOVED***
{{# def.setupKeyword ***REMOVED******REMOVED***

{{## def.skipFormat:
  {{? $breakOnError ***REMOVED******REMOVED*** if (true) { {{?***REMOVED******REMOVED***
  {{ return out; ***REMOVED******REMOVED***
#***REMOVED******REMOVED***

{{? it.opts.format === false ***REMOVED******REMOVED***{{# def.skipFormat ***REMOVED******REMOVED***{{?***REMOVED******REMOVED***


{{# def.$data ***REMOVED******REMOVED***


{{## def.$dataCheckFormat:
  {{# def.$dataNotType:'string' ***REMOVED******REMOVED***
  ({{? $unknownFormats != 'ignore' ***REMOVED******REMOVED***
     ({{=$schemaValue***REMOVED******REMOVED*** && !{{=$format***REMOVED******REMOVED***
      {{? $allowUnknown ***REMOVED******REMOVED***
        && self._opts.unknownFormats.indexOf({{=$schemaValue***REMOVED******REMOVED***) == -1
      {{?***REMOVED******REMOVED***) ||
   {{?***REMOVED******REMOVED***
   ({{=$format***REMOVED******REMOVED*** && {{=$formatType***REMOVED******REMOVED*** == '{{=$ruleType***REMOVED******REMOVED***'
                 && !(typeof {{=$format***REMOVED******REMOVED*** == 'function'
                     ? {{? it.async***REMOVED******REMOVED***
                        (async{{=$lvl***REMOVED******REMOVED*** ? await {{=$format***REMOVED******REMOVED***({{=$data***REMOVED******REMOVED***) : {{=$format***REMOVED******REMOVED***({{=$data***REMOVED******REMOVED***))
                       {{??***REMOVED******REMOVED***
                        {{=$format***REMOVED******REMOVED***({{=$data***REMOVED******REMOVED***)
                       {{?***REMOVED******REMOVED***
                     : {{=$format***REMOVED******REMOVED***.test({{=$data***REMOVED******REMOVED***))))
#***REMOVED******REMOVED***

{{## def.checkFormat:
  {{
    var $formatRef = 'formats' + it.util.getProperty($schema);
    if ($isObject) $formatRef += '.validate';
  ***REMOVED******REMOVED***
  {{? typeof $format == 'function' ***REMOVED******REMOVED***
    {{=$formatRef***REMOVED******REMOVED***({{=$data***REMOVED******REMOVED***)
  {{??***REMOVED******REMOVED***
    {{=$formatRef***REMOVED******REMOVED***.test({{=$data***REMOVED******REMOVED***)
  {{?***REMOVED******REMOVED***
#***REMOVED******REMOVED***


{{
  var $unknownFormats = it.opts.unknownFormats
    , $allowUnknown = Array.isArray($unknownFormats);
***REMOVED******REMOVED***

{{? $isData ***REMOVED******REMOVED***
  {{
    var $format = 'format' + $lvl
      , $isObject = 'isObject' + $lvl
      , $formatType = 'formatType' + $lvl;
  ***REMOVED******REMOVED***
  var {{=$format***REMOVED******REMOVED*** = formats[{{=$schemaValue***REMOVED******REMOVED***];
  var {{=$isObject***REMOVED******REMOVED*** = typeof {{=$format***REMOVED******REMOVED*** == 'object'
                        && !({{=$format***REMOVED******REMOVED*** instanceof RegExp)
                        && {{=$format***REMOVED******REMOVED***.validate;
  var {{=$formatType***REMOVED******REMOVED*** = {{=$isObject***REMOVED******REMOVED*** && {{=$format***REMOVED******REMOVED***.type || 'string';
  if ({{=$isObject***REMOVED******REMOVED***) {
    {{? it.async***REMOVED******REMOVED***
      var async{{=$lvl***REMOVED******REMOVED*** = {{=$format***REMOVED******REMOVED***.async;
    {{?***REMOVED******REMOVED***
    {{=$format***REMOVED******REMOVED*** = {{=$format***REMOVED******REMOVED***.validate;
  ***REMOVED***
  if ({{# def.$dataCheckFormat ***REMOVED******REMOVED***) {
{{??***REMOVED******REMOVED***
  {{ var $format = it.formats[$schema]; ***REMOVED******REMOVED***
  {{? !$format ***REMOVED******REMOVED***
    {{? $unknownFormats == 'ignore' ***REMOVED******REMOVED***
      {{ it.logger.warn('unknown format "' + $schema + '" ignored in schema at path "' + it.errSchemaPath + '"'); ***REMOVED******REMOVED***
      {{# def.skipFormat ***REMOVED******REMOVED***
    {{?? $allowUnknown && $unknownFormats.indexOf($schema) >= 0 ***REMOVED******REMOVED***
      {{# def.skipFormat ***REMOVED******REMOVED***
    {{??***REMOVED******REMOVED***
      {{ throw new Error('unknown format "' + $schema + '" is used in schema at path "' + it.errSchemaPath + '"'); ***REMOVED******REMOVED***
    {{?***REMOVED******REMOVED***
  {{?***REMOVED******REMOVED***
  {{
    var $isObject = typeof $format == 'object'
                    && !($format instanceof RegExp)
                    && $format.validate;
    var $formatType = $isObject && $format.type || 'string';
    if ($isObject) {
      var $async = $format.async === true;
      $format = $format.validate;
    ***REMOVED***
  ***REMOVED******REMOVED***
  {{? $formatType != $ruleType ***REMOVED******REMOVED***
    {{# def.skipFormat ***REMOVED******REMOVED***
  {{?***REMOVED******REMOVED***
  {{? $async ***REMOVED******REMOVED***
    {{
      if (!it.async) throw new Error('async format in sync schema');
      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';
    ***REMOVED******REMOVED***
    if (!(await {{=$formatRef***REMOVED******REMOVED***({{=$data***REMOVED******REMOVED***))) {
  {{??***REMOVED******REMOVED***
    if (!{{# def.checkFormat ***REMOVED******REMOVED***) {
  {{?***REMOVED******REMOVED***
{{?***REMOVED******REMOVED***
    {{# def.error:'format' ***REMOVED******REMOVED***
  ***REMOVED*** {{? $breakOnError ***REMOVED******REMOVED*** else { {{?***REMOVED******REMOVED***
