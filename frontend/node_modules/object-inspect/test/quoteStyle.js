'use strict';

var inspect = require('../');
var test = require('tape');

test('quoteStyle option', function (t) {
    t['throws'](function () { inspect(null, { quoteStyle: false ***REMOVED***); ***REMOVED***, 'false is not a valid value');
    t['throws'](function () { inspect(null, { quoteStyle: true ***REMOVED***); ***REMOVED***, 'true is not a valid value');
    t['throws'](function () { inspect(null, { quoteStyle: '' ***REMOVED***); ***REMOVED***, '"" is not a valid value');
    t['throws'](function () { inspect(null, { quoteStyle: {***REMOVED*** ***REMOVED***); ***REMOVED***, '{***REMOVED*** is not a valid value');
    t['throws'](function () { inspect(null, { quoteStyle: [] ***REMOVED***); ***REMOVED***, '[] is not a valid value');
    t['throws'](function () { inspect(null, { quoteStyle: 42 ***REMOVED***); ***REMOVED***, '42 is not a valid value');
    t['throws'](function () { inspect(null, { quoteStyle: NaN ***REMOVED***); ***REMOVED***, 'NaN is not a valid value');
    t['throws'](function () { inspect(null, { quoteStyle: function () {***REMOVED*** ***REMOVED***); ***REMOVED***, 'a function is not a valid value');

    t.equal(inspect('"', { quoteStyle: 'single' ***REMOVED***), '\'"\'', 'double quote, quoteStyle: "single"');
    t.equal(inspect('"', { quoteStyle: 'double' ***REMOVED***), '"\\""', 'double quote, quoteStyle: "double"');

    t.equal(inspect('\'', { quoteStyle: 'single' ***REMOVED***), '\'\\\'\'', 'single quote, quoteStyle: "single"');
    t.equal(inspect('\'', { quoteStyle: 'double' ***REMOVED***), '"\'"', 'single quote, quoteStyle: "double"');

    t.equal(inspect('`', { quoteStyle: 'single' ***REMOVED***), '\'`\'', 'backtick, quoteStyle: "single"');
    t.equal(inspect('`', { quoteStyle: 'double' ***REMOVED***), '"`"', 'backtick, quoteStyle: "double"');

    t.end();
***REMOVED***);
