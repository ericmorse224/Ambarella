/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Ivan Kopeykin @vankop
*/

"use strict";

const ModuleFactory = require("./ModuleFactory");

/** @typedef {import("./ModuleFactory").ModuleFactoryCallback***REMOVED*** ModuleFactoryCallback */
/** @typedef {import("./ModuleFactory").ModuleFactoryCreateData***REMOVED*** ModuleFactoryCreateData */
/** @typedef {import("./NormalModuleFactory")***REMOVED*** NormalModuleFactory */

/**
 * Ignores error when module is unresolved
 */
class IgnoreErrorModuleFactory extends ModuleFactory {
	/**
	 * @param {NormalModuleFactory***REMOVED*** normalModuleFactory normalModuleFactory instance
	 */
	constructor(normalModuleFactory) {
		super();

		this.normalModuleFactory = normalModuleFactory;
	***REMOVED***

	/**
	 * @param {ModuleFactoryCreateData***REMOVED*** data data object
	 * @param {ModuleFactoryCallback***REMOVED*** callback callback
	 * @returns {void***REMOVED***
	 */
	create(data, callback) {
		this.normalModuleFactory.create(data, (err, result) =>
			callback(null, result)
		);
	***REMOVED***
***REMOVED***

module.exports = IgnoreErrorModuleFactory;
