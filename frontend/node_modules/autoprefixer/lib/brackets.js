function last(array) {
  return array[array.length - 1]
***REMOVED***

let brackets = {
  /**
   * Parse string to nodes tree
   */
  parse(str) {
    let current = ['']
    let stack = [current]

    for (let sym of str) {
      if (sym === '(') {
        current = ['']
        last(stack).push(current)
        stack.push(current)
        continue
      ***REMOVED***

      if (sym === ')') {
        stack.pop()
        current = last(stack)
        current.push('')
        continue
      ***REMOVED***

      current[current.length - 1] += sym
    ***REMOVED***

    return stack[0]
  ***REMOVED***,

  /**
   * Generate output string by nodes tree
   */
  stringify(ast) {
    let result = ''
    for (let i of ast) {
      if (typeof i === 'object') {
        result += `(${brackets.stringify(i)***REMOVED***)`
        continue
      ***REMOVED***

      result += i
    ***REMOVED***
    return result
  ***REMOVED***
***REMOVED***

module.exports = brackets
