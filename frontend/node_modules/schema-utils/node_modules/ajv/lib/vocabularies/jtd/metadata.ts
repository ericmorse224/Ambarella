import {KeywordCxt***REMOVED*** from "../../ajv"
import type {CodeKeywordDefinition***REMOVED*** from "../../types"
import {alwaysValidSchema***REMOVED*** from "../../compile/util"

const def: CodeKeywordDefinition = {
  keyword: "metadata",
  schemaType: "object",
  code(cxt: KeywordCxt) {
    checkMetadata(cxt)
    const {gen, schema, it***REMOVED*** = cxt
    if (alwaysValidSchema(it, schema)) return
    const valid = gen.name("valid")
    cxt.subschema({keyword: "metadata", jtdMetadata: true***REMOVED***, valid)
    cxt.ok(valid)
  ***REMOVED***,
***REMOVED***

export function checkMetadata({it, keyword***REMOVED***: KeywordCxt, metadata?: boolean): void {
  if (it.jtdMetadata !== metadata) {
    throw new Error(`JTD: "${keyword***REMOVED***" cannot be used in this schema location`)
  ***REMOVED***
***REMOVED***

export default def
