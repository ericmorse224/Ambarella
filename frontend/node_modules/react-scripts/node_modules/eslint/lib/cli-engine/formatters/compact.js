/**
 * @fileoverview Compact reporter
 * @author Nicholas C. Zakas
 */
"use strict";

//------------------------------------------------------------------------------
// Helper Functions
//------------------------------------------------------------------------------

/**
 * Returns the severity of warning or error
 * @param {Object***REMOVED*** message message object to examine
 * @returns {string***REMOVED*** severity level
 * @private
 */
function getMessageType(message) {
    if (message.fatal || message.severity === 2) {
        return "Error";
    ***REMOVED***
    return "Warning";

***REMOVED***


//------------------------------------------------------------------------------
// Public Interface
//------------------------------------------------------------------------------

module.exports = function(results) {

    let output = "",
        total = 0;

    results.forEach(result => {

        const messages = result.messages;

        total += messages.length;

        messages.forEach(message => {

            output += `${result.filePath***REMOVED***: `;
            output += `line ${message.line || 0***REMOVED***`;
            output += `, col ${message.column || 0***REMOVED***`;
            output += `, ${getMessageType(message)***REMOVED***`;
            output += ` - ${message.message***REMOVED***`;
            output += message.ruleId ? ` (${message.ruleId***REMOVED***)` : "";
            output += "\n";

        ***REMOVED***);

    ***REMOVED***);

    if (total > 0) {
        output += `\n${total***REMOVED*** problem${total !== 1 ? "s" : ""***REMOVED***`;
    ***REMOVED***

    return output;
***REMOVED***;
