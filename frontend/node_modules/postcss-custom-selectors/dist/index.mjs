import e from"postcss-selector-parser";import s from"fs";import t from"path";import n from"postcss";var o=(s,t)=>{const n={***REMOVED***;return s.nodes.slice().forEach((s=>{var o,c,r;if("atrule"!==s.type||"custom-selector"!==s.name)return;if(!s.params||!s.params.includes(":--"))return;const a=s.params.trim(),i=e().astSync(a),l=null==i||null==(o=i.nodes)||null==(c=o[0])||null==(r=c.nodes)?void 0:r[0];if(!l||"pseudo"!==l.type||!l.value.startsWith(":--"))return;const u=l.toString();n[u]=e().astSync(a.slice(u.length).trim()),Object(t).preserve||s.remove()***REMOVED***)),n***REMOVED***;function c(e,s){let t=e.nodes.length-1;for(;t>=0;){const n=r(e.nodes[t],s);n.length&&e.nodes.splice(t,1,...n),--t***REMOVED***return e***REMOVED***function r(e,s){const t=[];for(const n in e.nodes){const{value:o,nodes:a***REMOVED***=e.nodes[n];if(o in s){for(const c of s[o].nodes){const o=e.clone(),a=c.clone().nodes;o.nodes.splice(n,1,...a.map(((s,t)=>("selector"===s.type&&(s.spaces={...e.nodes[t].spaces***REMOVED***),0===t&&s.spaces&&(s.spaces.before=""),t===a.length-1&&s.spaces&&(s.spaces.after=""),s))));const i=r(o,s);u(o.nodes,Number(n)),i.length?t.push(...i):t.push(o)***REMOVED***return t***REMOVED***a&&a.length&&c(e.nodes[n],s)***REMOVED***return t***REMOVED***const a=/^(tag|universal)$/,i=/^(class|id|pseudo|tag|universal)$/,l=e=>i.test(Object(e).type),u=(e,s)=>{if(s&&(t=e[s],a.test(Object(t).type))&&l(e[s-1])){let t=s-1;for(;t&&l(e[t]);)--t;if(t<s){const n=e.splice(s,1)[0];e.splice(t,0,n),e[t].spaces.before=e[t+1].spaces.before,e[t+1].spaces.before="",e[s]&&(e[s].spaces.after=e[t].spaces.after,e[t].spaces.after="")***REMOVED******REMOVED***var t***REMOVED***;function p(e){return o(e)***REMOVED***function f(s){const t=Object.assign({***REMOVED***,Object(s).customSelectors||Object(s)["custom-selectors"]);for(const s in t)t[s]=e().astSync(t[s]);return t***REMOVED***function m(e){return e.map((e=>{if(e instanceof Promise)return e;if(e instanceof Function)return e();const s=e===Object(e)?e:{from:String(e)***REMOVED***;if(Object(s).customSelectors||Object(s)["custom-selectors"])return s;const n=String(s.from||"");return{type:(s.type||t.extname(n).slice(1)).toLowerCase(),from:n***REMOVED******REMOVED***)).reduce((async(e,s)=>{const o=await e,{type:c,from:r***REMOVED***=await s;return"ast"===c?Object.assign(o,p(r)):"css"===c?Object.assign(o,await async function(e){const s=await j(t.resolve(e));return p(n.parse(s,{from:t.resolve(e)***REMOVED***))***REMOVED***(r)):"js"===c?Object.assign(o,await async function(e){return f(await import(t.resolve(e)))***REMOVED***(r)):"json"===c?Object.assign(o,await async function(e){return f(await y(t.resolve(e)))***REMOVED***(r)):Object.assign(o,f(await s))***REMOVED***),Promise.resolve({***REMOVED***))***REMOVED***const j=e=>new Promise(((t,n)=>{s.readFile(e,"utf8",((e,s)=>{e?n(e):t(s)***REMOVED***))***REMOVED***)),y=async e=>JSON.parse(await j(e));function b(e,s){return Promise.all(s.map((async s=>{if(s instanceof Function)await s(d(e));else{const n=s===Object(s)?s:{to:String(s)***REMOVED***,o=n.toJSON||d;if("customSelectors"in n)n.customSelectors=o(e);else if("custom-selectors"in n)n["custom-selectors"]=o(e);else{const s=String(n.to||""),c=(n.type||t.extname(n.to).slice(1)).toLowerCase(),r=o(e);"css"===c&&await async function(e,s){const t=`${Object.keys(s).reduce(((e,t)=>(e.push(`@custom-selector ${t***REMOVED*** ${s[t]***REMOVED***;`),e)),[]).join("\n")***REMOVED***\n`;await O(e,t)***REMOVED***(s,r),"js"===c&&await async function(e,s){const t=`module.exports = {\n\tcustomSelectors: {\n${Object.keys(s).reduce(((e,t)=>(e.push(`\t\t'${g(t)***REMOVED***': '${g(s[t])***REMOVED***'`),e)),[]).join(",\n")***REMOVED***\n\t***REMOVED***\n***REMOVED***;\n`;await O(e,t)***REMOVED***(s,r),"json"===c&&await async function(e,s){const t=`${JSON.stringify({"custom-selectors":s***REMOVED***,null,"\t")***REMOVED***\n`;await O(e,t)***REMOVED***(s,r),"mjs"===c&&await async function(e,s){const t=`export const customSelectors = {\n${Object.keys(s).reduce(((e,t)=>(e.push(`\t'${g(t)***REMOVED***': '${g(s[t])***REMOVED***'`),e)),[]).join(",\n")***REMOVED***\n***REMOVED***;\n`;await O(e,t)***REMOVED***(s,r)***REMOVED******REMOVED******REMOVED***)))***REMOVED***const d=e=>Object.keys(e).reduce(((s,t)=>(s[t]=String(e[t]),s)),{***REMOVED***),O=(e,t)=>new Promise(((n,o)=>{s.writeFile(e,t,(e=>{e?o(e):n()***REMOVED***))***REMOVED***)),g=e=>e.replace(/\\([\s\S])|(')/g,"\\$1$2").replace(/\n/g,"\\n").replace(/\r/g,"\\r"),w=s=>{const t=Boolean(Object(s).preserve),n=[].concat(Object(s).importFrom||[]),r=[].concat(Object(s).exportTo||[]),a=m(n),i=Symbol("customSelectorHelper");return{postcssPlugin:"postcss-custom-selectors",Once:async(e,s)=>{s[i]=Object.assign(await a,o(e,{preserve:t***REMOVED***)),await b(s[i],r)***REMOVED***,Rule:(s,n)=>{s.selector.includes(":--")&&((s,t,n)=>{const o=e((e=>{c(e,t)***REMOVED***)).processSync(s.selector);o!==s.selector&&(s.cloneBefore({selector:o***REMOVED***),n.preserve||s.remove())***REMOVED***)(s,n[i],{preserve:t***REMOVED***)***REMOVED******REMOVED******REMOVED***;w.postcss=!0;export{w as default***REMOVED***;
