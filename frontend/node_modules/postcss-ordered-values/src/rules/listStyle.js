'use strict';
const valueParser = require('postcss-value-parser');
const listStyleTypes = require('./listStyleTypes.json');

const definedTypes = new Set(listStyleTypes['list-style-type']);

const definedPosition = new Set(['inside', 'outside']);

/**
 * @param {import('postcss-value-parser').ParsedValue***REMOVED*** listStyle
 * @return {string***REMOVED***
 */
module.exports = function listStyleNormalizer(listStyle) {
  const order = { type: '', position: '', image: '' ***REMOVED***;

  listStyle.walk((decl) => {
    if (decl.type === 'word') {
      if (definedTypes.has(decl.value)) {
        // its a type field
        order.type = `${order.type***REMOVED*** ${decl.value***REMOVED***`;
      ***REMOVED*** else if (definedPosition.has(decl.value)) {
        order.position = `${order.position***REMOVED*** ${decl.value***REMOVED***`;
      ***REMOVED*** else if (decl.value === 'none') {
        if (
          order.type
            .split(' ')
            .filter((e) => e !== '' && e !== ' ')
            .includes('none')
        ) {
          order.image = `${order.image***REMOVED*** ${decl.value***REMOVED***`;
        ***REMOVED*** else {
          order.type = `${order.type***REMOVED*** ${decl.value***REMOVED***`;
        ***REMOVED***
      ***REMOVED*** else {
        order.type = `${order.type***REMOVED*** ${decl.value***REMOVED***`;
      ***REMOVED***
    ***REMOVED***
    if (decl.type === 'function') {
      order.image = `${order.image***REMOVED*** ${valueParser.stringify(decl)***REMOVED***`;
    ***REMOVED***
  ***REMOVED***);

  return `${order.type.trim()***REMOVED*** ${order.position.trim()***REMOVED*** ${order.image.trim()***REMOVED***`.trim();
***REMOVED***;
