/**
 * @fileoverview Enforce a maximum number of classes per file
 * @author James Garbutt <https://github.com/43081j>
 */
"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

/** @type {import('../types').Rule.RuleModule***REMOVED*** */
module.exports = {
	meta: {
		type: "suggestion",

		docs: {
			description: "Enforce a maximum number of classes per file",
			recommended: false,
			url: "https://eslint.org/docs/latest/rules/max-classes-per-file",
		***REMOVED***,

		schema: [
			{
				oneOf: [
					{
						type: "integer",
						minimum: 1,
					***REMOVED***,
					{
						type: "object",
						properties: {
							ignoreExpressions: {
								type: "boolean",
							***REMOVED***,
							max: {
								type: "integer",
								minimum: 1,
							***REMOVED***,
						***REMOVED***,
						additionalProperties: false,
					***REMOVED***,
				],
			***REMOVED***,
		],

		messages: {
			maximumExceeded:
				"File has too many classes ({{ classCount ***REMOVED******REMOVED***). Maximum allowed is {{ max ***REMOVED******REMOVED***.",
		***REMOVED***,
	***REMOVED***,
	create(context) {
		const [option = {***REMOVED***] = context.options;
		const [ignoreExpressions, max] =
			typeof option === "number"
				? [false, option || 1]
				: [option.ignoreExpressions, option.max || 1];

		let classCount = 0;

		return {
			Program() {
				classCount = 0;
			***REMOVED***,
			"Program:exit"(node) {
				if (classCount > max) {
					context.report({
						node,
						messageId: "maximumExceeded",
						data: {
							classCount,
							max,
						***REMOVED***,
					***REMOVED***);
				***REMOVED***
			***REMOVED***,
			ClassDeclaration() {
				classCount++;
			***REMOVED***,
			ClassExpression() {
				if (!ignoreExpressions) {
					classCount++;
				***REMOVED***
			***REMOVED***,
		***REMOVED***;
	***REMOVED***,
***REMOVED***;
