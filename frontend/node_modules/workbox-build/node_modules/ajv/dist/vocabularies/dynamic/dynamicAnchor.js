"use strict";
Object.defineProperty(exports, "__esModule", { value: true ***REMOVED***);
exports.dynamicAnchor = void 0;
const codegen_1 = require("../../compile/codegen");
const names_1 = require("../../compile/names");
const compile_1 = require("../../compile");
const ref_1 = require("../core/ref");
const def = {
    keyword: "$dynamicAnchor",
    schemaType: "string",
    code: (cxt) => dynamicAnchor(cxt, cxt.schema),
***REMOVED***;
function dynamicAnchor(cxt, anchor) {
    const { gen, it ***REMOVED*** = cxt;
    it.schemaEnv.root.dynamicAnchors[anchor] = true;
    const v = (0, codegen_1._) `${names_1.default.dynamicAnchors***REMOVED***${(0, codegen_1.getProperty)(anchor)***REMOVED***`;
    const validate = it.errSchemaPath === "#" ? it.validateName : _getValidate(cxt);
    gen.if((0, codegen_1._) `!${v***REMOVED***`, () => gen.assign(v, validate));
***REMOVED***
exports.dynamicAnchor = dynamicAnchor;
function _getValidate(cxt) {
    const { schemaEnv, schema, self ***REMOVED*** = cxt.it;
    const { root, baseId, localRefs, meta ***REMOVED*** = schemaEnv.root;
    const { schemaId ***REMOVED*** = self.opts;
    const sch = new compile_1.SchemaEnv({ schema, schemaId, root, baseId, localRefs, meta ***REMOVED***);
    compile_1.compileSchema.call(self, sch);
    return (0, ref_1.getValidate)(cxt, sch);
***REMOVED***
exports.default = def;
//# sourceMappingURL=dynamicAnchor.js.map