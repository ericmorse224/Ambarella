'use strict';

var callBound = require('call-bound');

// eslint-disable-next-line no-extra-parens
var $deref = /** @type {<T extends WeakKey>(thisArg: WeakRef<T>) => T | undefined***REMOVED*** */ (callBound('WeakRef.prototype.deref', true));

/** @type {import('.')***REMOVED*** */
module.exports = typeof WeakRef === 'undefined'
	? function isWeakRef(_value) { // eslint-disable-line no-unused-vars
		return false;
	***REMOVED***
	: function isWeakRef(value) {
		if (!value || typeof value !== 'object') {
			return false;
		***REMOVED***
		try {
			// @ts-expect-error
			$deref(value);
			return true;
		***REMOVED*** catch (e) {
			return false;
		***REMOVED***
	***REMOVED***;
