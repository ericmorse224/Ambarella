import type { Directives ***REMOVED*** from '../doc/directives';
import { Document ***REMOVED*** from '../doc/Document';
import type { ParsedNode ***REMOVED*** from '../nodes/Node';
import type { DocumentOptions, ParseOptions, SchemaOptions ***REMOVED*** from '../options';
import type * as CST from '../parse/cst';
import type { ComposeErrorHandler ***REMOVED*** from './composer';
export declare function composeDoc<Contents extends ParsedNode = ParsedNode, Strict extends boolean = true>(options: ParseOptions & DocumentOptions & SchemaOptions, directives: Directives, { offset, start, value, end ***REMOVED***: CST.Document, onError: ComposeErrorHandler): Document.Parsed<Contents, Strict>;
