/*
	MIT License http://www.opensource.org/licenses/mit-license.php
*/

"use strict";

/** @typedef {import("./ObjectMiddleware").ObjectDeserializerContext***REMOVED*** ObjectDeserializerContext */
/** @typedef {import("./ObjectMiddleware").ObjectSerializerContext***REMOVED*** ObjectSerializerContext */

class SetObjectSerializer {
	/**
	 * @template T
	 * @param {Set<T>***REMOVED*** obj set
	 * @param {ObjectSerializerContext***REMOVED*** context context
	 */
	serialize(obj, context) {
		context.write(obj.size);
		for (const value of obj) {
			context.write(value);
		***REMOVED***
	***REMOVED***

	/**
	 * @template T
	 * @param {ObjectDeserializerContext***REMOVED*** context context
	 * @returns {Set<T>***REMOVED*** date
	 */
	deserialize(context) {
		/** @type {number***REMOVED*** */
		const size = context.read();
		/** @type {Set<T>***REMOVED*** */
		const set = new Set();
		for (let i = 0; i < size; i++) {
			set.add(context.read());
		***REMOVED***
		return set;
	***REMOVED***
***REMOVED***

module.exports = SetObjectSerializer;
