import type { BlockScope ***REMOVED*** from './BlockScope';
import type { CatchScope ***REMOVED*** from './CatchScope';
import type { ClassFieldInitializerScope ***REMOVED*** from './ClassFieldInitializerScope';
import type { ClassScope ***REMOVED*** from './ClassScope';
import type { ClassStaticBlockScope ***REMOVED*** from './ClassStaticBlockScope';
import type { ConditionalTypeScope ***REMOVED*** from './ConditionalTypeScope';
import type { ForScope ***REMOVED*** from './ForScope';
import type { FunctionExpressionNameScope ***REMOVED*** from './FunctionExpressionNameScope';
import type { FunctionScope ***REMOVED*** from './FunctionScope';
import type { FunctionTypeScope ***REMOVED*** from './FunctionTypeScope';
import type { GlobalScope ***REMOVED*** from './GlobalScope';
import type { MappedTypeScope ***REMOVED*** from './MappedTypeScope';
import type { ModuleScope ***REMOVED*** from './ModuleScope';
import type { SwitchScope ***REMOVED*** from './SwitchScope';
import type { TSEnumScope ***REMOVED*** from './TSEnumScope';
import type { TSModuleScope ***REMOVED*** from './TSModuleScope';
import type { TypeScope ***REMOVED*** from './TypeScope';
import type { WithScope ***REMOVED*** from './WithScope';
type Scope = BlockScope | CatchScope | ClassScope | ClassFieldInitializerScope | ClassStaticBlockScope | ConditionalTypeScope | ForScope | FunctionExpressionNameScope | FunctionScope | FunctionTypeScope | GlobalScope | MappedTypeScope | ModuleScope | SwitchScope | TSEnumScope | TSModuleScope | TypeScope | WithScope;
export { Scope ***REMOVED***;
//# sourceMappingURL=Scope.d.ts.map