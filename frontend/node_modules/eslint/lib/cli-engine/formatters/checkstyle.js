/**
 * @fileoverview CheckStyle XML reporter
 * @author Ian Christian Myers
 */
"use strict";

const xmlEscape = require("../xml-escape");

//------------------------------------------------------------------------------
// Helper Functions
//------------------------------------------------------------------------------

/**
 * Returns the severity of warning or error
 * @param {Object***REMOVED*** message message object to examine
 * @returns {string***REMOVED*** severity level
 * @private
 */
function getMessageType(message) {
    if (message.fatal || message.severity === 2) {
        return "error";
    ***REMOVED***
    return "warning";

***REMOVED***

//------------------------------------------------------------------------------
// Public Interface
//------------------------------------------------------------------------------

module.exports = function(results) {

    let output = "";

    output += "<?xml version=\"1.0\" encoding=\"utf-8\"?>";
    output += "<checkstyle version=\"4.3\">";

    results.forEach(result => {
        const messages = result.messages;

        output += `<file name="${xmlEscape(result.filePath)***REMOVED***">`;

        messages.forEach(message => {
            output += [
                `<error line="${xmlEscape(message.line || 0)***REMOVED***"`,
                `column="${xmlEscape(message.column || 0)***REMOVED***"`,
                `severity="${xmlEscape(getMessageType(message))***REMOVED***"`,
                `message="${xmlEscape(message.message)***REMOVED***${message.ruleId ? ` (${message.ruleId***REMOVED***)` : ""***REMOVED***"`,
                `source="${message.ruleId ? xmlEscape(`eslint.rules.${message.ruleId***REMOVED***`) : ""***REMOVED***" />`
            ].join(" ");
        ***REMOVED***);

        output += "</file>";

    ***REMOVED***);

    output += "</checkstyle>";

    return output;
***REMOVED***;
