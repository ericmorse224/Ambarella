"use strict";var t=require("postcss-value-parser"),e=require("vm");function n(t){return t&&"object"==typeof t&&"default"in t?t:{default:t***REMOVED******REMOVED***var r=n(t),u=n(e);function i(t){return t*(180/Math.PI)***REMOVED***const o={turn:function(t){return 2*t*Math.PI***REMOVED***,deg:function(t){return t*(Math.PI/180)***REMOVED***,grad:function(t){return t*(Math.PI/200)***REMOVED******REMOVED***;function a(t){return"word"===t.type***REMOVED***const s=["+","-","*","/"];var f;function c(t){return!Number.isNaN(t)&&Number.isFinite(t)***REMOVED***function l(t,e=!1){let n=!0;const i=[];if(t.filter((t=>"function"===t.type)).forEach((t=>{var r;if(!n)return;if(""!==t.value)return void(n=!1);const u=l(t.nodes.slice(0),e),i=1===u.length,o=Number((null==(r=u[0])?void 0:r.value)||"");i&&"word"===u[0].type&&!Number.isNaN(o)?(d(t),t.value=u[0].value):n=!1***REMOVED***)),!n)return t;const a=t.filter((t=>"word"===t.type||s.includes(t.value)));let v=f.Number;const m=[];let h;const N=(t,e,r)=>{if(v===e){if(e===f.Number){const e=r||"";m.includes(e)||m.push({number:t,unit:e,index:i.length***REMOVED***)***REMOVED***i.push(t),v=e===f.Number?f.Operation:f.Number***REMOVED***else n=!1***REMOVED***;for(let t=0,u=a.length;t<u&&n;t++){const u=a[t];if(s.includes(u.value)){N(u.value,f.Operation);continue***REMOVED***if("pi"===u.value){N(Math.PI.toString(),f.Number);continue***REMOVED***if("e"===u.value){N(Math.E.toString(),f.Number);continue***REMOVED***const i=r.default.unit(u.value);if(!i){n=!1;break***REMOVED***if(e){if(h||(h=i.unit),h!==i.unit){n=!1;break***REMOVED***N(u.value,f.Operation)***REMOVED***else i.unit?"rad"!==i.unit&&"function"!=typeof o[i.unit]?n=!1:N(i.number,f.Number,i.unit):N(u.value,f.Number)***REMOVED***if(!n)return t;if(i.length%2==0||i.length<3)return t;let b;try{let t="";const e=new Set(m.map((t=>t.unit)));if(e.size>1)if(e.has("")){if(2!==e.size)throw new Error;[t]=Array.from(e).filter((t=>""!==t))***REMOVED***else m.forEach((t=>{if("rad"!==t.unit){const e=o[t.unit](Number(t.number));if(!c(e))throw new Error;i[t.index]=e.toString()***REMOVED******REMOVED***));const n=u.default.createContext({result:NaN***REMOVED***);new u.default.Script(`result = ${i.join(" ")***REMOVED***`).runInContext(n),"number"==typeof n.result&&c(n.result)&&(t&&(n.result=o[t](n.result)),c(n.result)&&(b=n.result))***REMOVED***catch(t){***REMOVED***if(void 0!==b){let e=b.toString();h&&(e+=h);const n=t[0].sourceIndex,r=e.length;t.length=0,t.push({type:"word",value:e,sourceIndex:n,sourceEndIndex:r***REMOVED***)***REMOVED***return t***REMOVED***function d(t){delete t.nodes;const e=t;return e.type="word",e***REMOVED***function v(t,e){if(!Number.isNaN(t)){if(t>Number.MAX_SAFE_INTEGER)return"infinity";if(t<Number.MIN_SAFE_INTEGER)return"-infinity"***REMOVED***return Number(t.toFixed(e)).toString()***REMOVED***function m(t){let e,n="";if("infinity"===t.toLowerCase()?e=1/0:"-infinity"===t.toLowerCase()?e=-1/0:"pi"===t?e=Math.PI:"e"===t&&(e=Math.E),!e){const u=r.default.unit(t);if(!u)return!1;e=Number(u.number),Number.isNaN(e)||(n=u.unit)***REMOVED***return{number:e,unit:n***REMOVED******REMOVED***function h(t,e=!0){t.nodes=l(t.nodes);const n=t.nodes.filter(a);if(1!==t.nodes.length||1!==n.length)return;const{value:r***REMOVED***=n[0],u=m(r);if(!u)return;let i=u.number;if(e){if(u.unit&&"rad"!==u.unit){if(!o[u.unit])return;i=o[u.unit](i)***REMOVED******REMOVED***else if(u.unit)return;return[d(t),i]***REMOVED***!function(t){t[t.Number=0]="Number",t[t.Operation=1]="Operation"***REMOVED***(f||(f={***REMOVED***));const N=[{check:"asin(",transform:function(t){const e=r.default(t.value);return e.walk((t=>{if("function"!==t.type||"asin"!==t.value.toLowerCase())return;const e=h(t,!1);if(!e)return;const[n,r]=e;let u=Math.asin(r);Number.isNaN(u)||"number"!=typeof u||(u=`${v(i(u),2)***REMOVED***deg`),n.value=u+""***REMOVED***),!0),e.toString()***REMOVED******REMOVED***,{check:"acos(",transform:function(t){const e=r.default(t.value);return e.walk((t=>{if("function"!==t.type||"acos"!==t.value.toLowerCase())return;const e=h(t,!1);if(!e)return;const[n,r]=e;let u=Math.acos(r);Number.isNaN(u)||"number"!=typeof u||(u=`${v(i(u),2)***REMOVED***deg`),n.value=u+""***REMOVED***),!0),e.toString()***REMOVED******REMOVED***,{check:"atan(",transform:function(t){const e=r.default(t.value);return e.walk((t=>{if("function"!==t.type||"atan"!==t.value.toLowerCase())return;const e=h(t,!1);if(!e)return;const[n,r]=e;let u=Math.atan(r);Number.isNaN(u)||"number"!=typeof u||(u=`${v(i(u),2)***REMOVED***deg`),n.value=u+""***REMOVED***),!0),e.toString()***REMOVED******REMOVED***,{check:"atan2(",transform:function(t){const e=r.default(t.value);return e.walk((t=>{if("function"!==t.type||"atan2"!==t.value.toLowerCase())return;const e=t.nodes.findIndex((t=>"div"===t.type&&","===t.value));if(e<0)return;let n=t.nodes.slice(0,e).filter(a),r=t.nodes.slice(e+1).filter(a);if(0===n.length||0===r.length)return;if(n.length>1&&(n=l(n,!0)),r.length>1&&(r=l(r,!0)),1!==n.length||1!==r.length)return;const u=m(n[0].value),o=m(r[0].value);if(!u||!o)return;if(u.unit!==o.unit)return;let s=Math.atan2(u.number,o.number);Number.isNaN(s)||"number"!=typeof s||(s=`${v(i(s),2)***REMOVED***deg`);d(t).value=s+""***REMOVED***),!0),e.toString()***REMOVED******REMOVED***,{check:"sin(",transform:function(t){const e=r.default(t.value);return e.walk((t=>{if("function"!==t.type||"sin"!==t.value.toLowerCase())return;const e=h(t);if(!e)return;const[n,r]=e;n.value=v(Math.sin(r),5)***REMOVED***),!0),e.toString()***REMOVED******REMOVED***,{check:"cos(",transform:function(t){const e=r.default(t.value);return e.walk((t=>{if("function"!==t.type||"cos"!==t.value.toLowerCase())return;const e=h(t);if(!e)return;const[n,r]=e;n.value=v(Math.cos(r),5)***REMOVED***),!0),e.toString()***REMOVED******REMOVED***,{check:"tan(",transform:function(t){const e=r.default(t.value);return e.walk((t=>{if("function"!==t.type||"tan"!==t.value.toLowerCase())return;const e=h(t);if(!e)return;const[n,r]=e,u=Number(v(i(r),2)),o=u/90;n.value=u%90==0&&o%2!=0?o>0?"infinity":"-infinity":v(Math.tan(r),5)***REMOVED***),!0),e.toString()***REMOVED******REMOVED***],b=t=>{const e=Object.assign({preserve:!1***REMOVED***,t);return{postcssPlugin:"postcss-trigonometric-functions",Declaration(t){const n=N.filter((e=>t.value.toLowerCase().includes(e.check)));if(!t||0===n.length)return;const r=t.clone();n.forEach((t=>{const e=t.transform(r);e&&(r.value=e)***REMOVED***)),t.value!==r.value&&(t.before(r),e.preserve||t.remove())***REMOVED******REMOVED******REMOVED***;b.postcss=!0,module.exports=b;
