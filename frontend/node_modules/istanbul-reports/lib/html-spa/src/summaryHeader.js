const React = require('react');

function Ignores({ metrics, metricsToShow ***REMOVED***) {
    const metricKeys = Object.keys(metricsToShow);
    const result = [];

    for (let i = 0; i < metricKeys.length; i++) {
        const metricKey = metricKeys[i];
        if (metricsToShow[metricKey]) {
            const skipped = metrics[metricKey].skipped;
            if (skipped > 0) {
                result.push(
                    `${skipped***REMOVED*** ${metricKey***REMOVED***${
                        skipped === 1 ? '' : metricKey === 'branch' ? 'es' : 's'
                    ***REMOVED***`
                );
            ***REMOVED***
        ***REMOVED***
    ***REMOVED***

    if (result.length === 0) {
        return false;
    ***REMOVED***

    return (
        <div className="toolbar__item">
            <span className="strong">{result.join(', ')***REMOVED***</span>
            <span className="quiet">Ignored</span>
        </div>
    );
***REMOVED***

function StatusMetric({ data, name ***REMOVED***) {
    return (
        <div className="toolbar__item">
            <span className="strong">{data.pct***REMOVED***%</span>{' '***REMOVED***
            <span className="quiet">{name***REMOVED***</span>{' '***REMOVED***
            <span className={'fraction ' + data.classForPercent***REMOVED***>
                {data.covered***REMOVED***/{data.total***REMOVED***
            </span>
        </div>
    );
***REMOVED***

module.exports = function SummaryHeader({ metrics, metricsToShow ***REMOVED***) {
    return (
        <div className="toolbar">
            {metricsToShow.statements && (
                <StatusMetric data={metrics.statements***REMOVED*** name="Statements" />
            )***REMOVED***
            {metricsToShow.branches && (
                <StatusMetric data={metrics.branches***REMOVED*** name="Branches" />
            )***REMOVED***
            {metricsToShow.functions && (
                <StatusMetric data={metrics.functions***REMOVED*** name="Functions" />
            )***REMOVED***
            {metricsToShow.lines && (
                <StatusMetric data={metrics.lines***REMOVED*** name="Lines" />
            )***REMOVED***
            <Ignores metrics={metrics***REMOVED*** metricsToShow={metricsToShow***REMOVED*** />
        </div>
    );
***REMOVED***;
