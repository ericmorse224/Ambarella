/**
 * @fileoverview Define common types for input completion.
 * @author Toru Nagashima <https://github.com/mysticatea>
 */
"use strict";

/** @type {any***REMOVED*** */
module.exports = {***REMOVED***;

/** @typedef {boolean | "off" | "readable" | "readonly" | "writable" | "writeable"***REMOVED*** GlobalConf */
/** @typedef {0 | 1 | 2 | "off" | "warn" | "error"***REMOVED*** SeverityConf */
/** @typedef {SeverityConf | [SeverityConf, ...any[]]***REMOVED*** RuleConf */

/**
 * @typedef {Object***REMOVED*** EcmaFeatures
 * @property {boolean***REMOVED*** [globalReturn] Enabling `return` statements at the top-level.
 * @property {boolean***REMOVED*** [jsx] Enabling JSX syntax.
 * @property {boolean***REMOVED*** [impliedStrict] Enabling strict mode always.
 */

/**
 * @typedef {Object***REMOVED*** ParserOptions
 * @property {EcmaFeatures***REMOVED*** [ecmaFeatures] The optional features.
 * @property {3|5|6|7|8|9|10|11|12|13|14|15|16|2015|2016|2017|2018|2019|2020|2021|2022|2023|2024|2025***REMOVED*** [ecmaVersion] The ECMAScript version (or revision number).
 * @property {"script"|"module"***REMOVED*** [sourceType] The source code type.
 * @property {boolean***REMOVED*** [allowReserved] Allowing the use of reserved words as identifiers in ES3.
 */

/**
 * @typedef {Object***REMOVED*** ConfigData
 * @property {Record<string, boolean>***REMOVED*** [env] The environment settings.
 * @property {string | string[]***REMOVED*** [extends] The path to other config files or the package name of shareable configs.
 * @property {Record<string, GlobalConf>***REMOVED*** [globals] The global variable settings.
 * @property {string | string[]***REMOVED*** [ignorePatterns] The glob patterns that ignore to lint.
 * @property {boolean***REMOVED*** [noInlineConfig] The flag that disables directive comments.
 * @property {OverrideConfigData[]***REMOVED*** [overrides] The override settings per kind of files.
 * @property {string***REMOVED*** [parser] The path to a parser or the package name of a parser.
 * @property {ParserOptions***REMOVED*** [parserOptions] The parser options.
 * @property {string[]***REMOVED*** [plugins] The plugin specifiers.
 * @property {string***REMOVED*** [processor] The processor specifier.
 * @property {boolean***REMOVED*** [reportUnusedDisableDirectives] The flag to report unused `eslint-disable` comments.
 * @property {boolean***REMOVED*** [root] The root flag.
 * @property {Record<string, RuleConf>***REMOVED*** [rules] The rule settings.
 * @property {Object***REMOVED*** [settings] The shared settings.
 */

/**
 * @typedef {Object***REMOVED*** OverrideConfigData
 * @property {Record<string, boolean>***REMOVED*** [env] The environment settings.
 * @property {string | string[]***REMOVED*** [excludedFiles] The glob patterns for excluded files.
 * @property {string | string[]***REMOVED*** [extends] The path to other config files or the package name of shareable configs.
 * @property {string | string[]***REMOVED*** files The glob patterns for target files.
 * @property {Record<string, GlobalConf>***REMOVED*** [globals] The global variable settings.
 * @property {boolean***REMOVED*** [noInlineConfig] The flag that disables directive comments.
 * @property {OverrideConfigData[]***REMOVED*** [overrides] The override settings per kind of files.
 * @property {string***REMOVED*** [parser] The path to a parser or the package name of a parser.
 * @property {ParserOptions***REMOVED*** [parserOptions] The parser options.
 * @property {string[]***REMOVED*** [plugins] The plugin specifiers.
 * @property {string***REMOVED*** [processor] The processor specifier.
 * @property {boolean***REMOVED*** [reportUnusedDisableDirectives] The flag to report unused `eslint-disable` comments.
 * @property {Record<string, RuleConf>***REMOVED*** [rules] The rule settings.
 * @property {Object***REMOVED*** [settings] The shared settings.
 */

/**
 * @typedef {Object***REMOVED*** ParseResult
 * @property {Object***REMOVED*** ast The AST.
 * @property {ScopeManager***REMOVED*** [scopeManager] The scope manager of the AST.
 * @property {Record<string, any>***REMOVED*** [services] The services that the parser provides.
 * @property {Record<string, string[]>***REMOVED*** [visitorKeys] The visitor keys of the AST.
 */

/**
 * @typedef {Object***REMOVED*** Parser
 * @property {(text:string, options:ParserOptions) => Object***REMOVED*** parse The definition of global variables.
 * @property {(text:string, options:ParserOptions) => ParseResult***REMOVED*** [parseForESLint] The parser options that will be enabled under this environment.
 */

/**
 * @typedef {Object***REMOVED*** Environment
 * @property {Record<string, GlobalConf>***REMOVED*** [globals] The definition of global variables.
 * @property {ParserOptions***REMOVED*** [parserOptions] The parser options that will be enabled under this environment.
 */

/**
 * @typedef {Object***REMOVED*** LintMessage
 * @property {number|undefined***REMOVED*** column The 1-based column number.
 * @property {number***REMOVED*** [endColumn] The 1-based column number of the end location.
 * @property {number***REMOVED*** [endLine] The 1-based line number of the end location.
 * @property {boolean***REMOVED*** [fatal] If `true` then this is a fatal error.
 * @property {{range:[number,number], text:string***REMOVED******REMOVED*** [fix] Information for autofix.
 * @property {number|undefined***REMOVED*** line The 1-based line number.
 * @property {string***REMOVED*** message The error message.
 * @property {string***REMOVED*** [messageId] The ID of the message in the rule's meta.
 * @property {(string|null)***REMOVED*** nodeType Type of node
 * @property {string|null***REMOVED*** ruleId The ID of the rule which makes this message.
 * @property {0|1|2***REMOVED*** severity The severity of this message.
 * @property {Array<{desc?: string, messageId?: string, fix: {range: [number, number], text: string***REMOVED******REMOVED***>***REMOVED*** [suggestions] Information for suggestions.
 */

/**
 * @typedef {Object***REMOVED*** SuppressedLintMessage
 * @property {number|undefined***REMOVED*** column The 1-based column number.
 * @property {number***REMOVED*** [endColumn] The 1-based column number of the end location.
 * @property {number***REMOVED*** [endLine] The 1-based line number of the end location.
 * @property {boolean***REMOVED*** [fatal] If `true` then this is a fatal error.
 * @property {{range:[number,number], text:string***REMOVED******REMOVED*** [fix] Information for autofix.
 * @property {number|undefined***REMOVED*** line The 1-based line number.
 * @property {string***REMOVED*** message The error message.
 * @property {string***REMOVED*** [messageId] The ID of the message in the rule's meta.
 * @property {(string|null)***REMOVED*** nodeType Type of node
 * @property {string|null***REMOVED*** ruleId The ID of the rule which makes this message.
 * @property {0|1|2***REMOVED*** severity The severity of this message.
 * @property {Array<{kind: string, justification: string***REMOVED***>***REMOVED*** suppressions The suppression info.
 * @property {Array<{desc?: string, messageId?: string, fix: {range: [number, number], text: string***REMOVED******REMOVED***>***REMOVED*** [suggestions] Information for suggestions.
 */

/**
 * @typedef {Record<string, Record<string, { count: number ***REMOVED***>>***REMOVED*** SuppressedViolations
 */

/**
 * @typedef {Object***REMOVED*** SuggestionResult
 * @property {string***REMOVED*** desc A short description.
 * @property {string***REMOVED*** [messageId] Id referencing a message for the description.
 * @property {{ text: string, range: number[] ***REMOVED******REMOVED*** fix fix result info
 */

/**
 * @typedef {Object***REMOVED*** Processor
 * @property {(text:string, filename:string) => Array<string | { text:string, filename:string ***REMOVED***>***REMOVED*** [preprocess] The function to extract code blocks.
 * @property {(messagesList:LintMessage[][], filename:string) => LintMessage[]***REMOVED*** [postprocess] The function to merge messages.
 * @property {boolean***REMOVED*** [supportsAutofix] If `true` then it means the processor supports autofix.
 */

/**
 * @typedef {Object***REMOVED*** RuleMetaDocs
 * @property {string***REMOVED*** description The description of the rule.
 * @property {boolean***REMOVED*** recommended If `true` then the rule is included in `eslint:recommended` preset.
 * @property {string***REMOVED*** url The URL of the rule documentation.
 */

/**
 * @typedef {Object***REMOVED*** DeprecatedInfo
 * @property {string***REMOVED*** [message] General message presented to the user
 * @property {string***REMOVED*** [url] URL to more information about this deprecation in general
 * @property {ReplacedByInfo[]***REMOVED*** [replacedBy] Potential replacements for the rule
 * @property {string***REMOVED*** [deprecatedSince] Version since the rule is deprecated
 * @property {?string***REMOVED*** [availableUntil] Version until it is available or null if indefinite
 */

/**
 * @typedef {Object***REMOVED*** ReplacedByInfo
 * @property {string***REMOVED*** [message] General message presented to the user
 * @property {string***REMOVED*** [url] URL to more information about this replacement in general
 * @property {{ name?: string, url?: string ***REMOVED******REMOVED*** [plugin] Use "eslint" for a core rule. Omit if the rule is in the same plugin.
 * @property {{ name?: string, url?: string ***REMOVED******REMOVED*** [rule] Name and information of the replacement rule
 */

/**
 * Information of deprecated rules.
 * @typedef {Object***REMOVED*** DeprecatedRuleInfo
 * @property {string***REMOVED*** ruleId The rule ID.
 * @property {string[]***REMOVED*** replacedBy The rule IDs that replace this deprecated rule.
 * @property {DeprecatedInfo***REMOVED*** [info] The raw deprecated info provided by rule. Unset if `deprecated` is a boolean.
 */

/**
 * A linting result.
 * @typedef {Object***REMOVED*** LintResult
 * @property {string***REMOVED*** filePath The path to the file that was linted.
 * @property {LintMessage[]***REMOVED*** messages All of the messages for the result.
 * @property {SuppressedLintMessage[]***REMOVED*** suppressedMessages All of the suppressed messages for the result.
 * @property {number***REMOVED*** errorCount Number of errors for the result.
 * @property {number***REMOVED*** fatalErrorCount Number of fatal errors for the result.
 * @property {number***REMOVED*** warningCount Number of warnings for the result.
 * @property {number***REMOVED*** fixableErrorCount Number of fixable errors for the result.
 * @property {number***REMOVED*** fixableWarningCount Number of fixable warnings for the result.
 * @property {Stats***REMOVED*** [stats] The performance statistics collected with the `stats` flag.
 * @property {string***REMOVED*** [source] The source code of the file that was linted.
 * @property {string***REMOVED*** [output] The source code of the file that was linted, with as many fixes applied as possible.
 * @property {DeprecatedRuleInfo[]***REMOVED*** usedDeprecatedRules The list of used deprecated rules.
 */

/**
 * Performance statistics
 * @typedef {Object***REMOVED*** Stats
 * @property {number***REMOVED*** fixPasses The number of times ESLint has applied at least one fix after linting.
 * @property {Times***REMOVED*** times The times spent on (parsing, fixing, linting) a file.
 */

/**
 * Performance Times for each ESLint pass
 * @typedef {Object***REMOVED*** Times
 * @property {TimePass[]***REMOVED*** passes Time passes
 */

/**
 * @typedef {Object***REMOVED*** TimePass
 * @property {ParseTime***REMOVED*** parse The parse object containing all parse time information.
 * @property {Record<string, RuleTime>***REMOVED*** [rules] The rules object containing all lint time information for each rule.
 * @property {FixTime***REMOVED*** fix The parse object containing all fix time information.
 * @property {number***REMOVED*** total The total time that is spent on (parsing, fixing, linting) a file.
 */
/**
 * @typedef {Object***REMOVED*** ParseTime
 * @property {number***REMOVED*** total The total time that is spent when parsing a file.
 */
/**
 * @typedef {Object***REMOVED*** RuleTime
 * @property {number***REMOVED*** total The total time that is spent on a rule.
 */
/**
 * @typedef {Object***REMOVED*** FixTime
 * @property {number***REMOVED*** total The total time that is spent on applying fixes to the code.
 */

/**
 * Information provided when the maximum warning threshold is exceeded.
 * @typedef {Object***REMOVED*** MaxWarningsExceeded
 * @property {number***REMOVED*** maxWarnings Number of warnings to trigger nonzero exit code.
 * @property {number***REMOVED*** foundWarnings Number of warnings found while linting.
 */

/**
 * Metadata about results for formatters.
 * @typedef {Object***REMOVED*** ResultsMeta
 * @property {MaxWarningsExceeded***REMOVED*** [maxWarningsExceeded] Present if the maxWarnings threshold was exceeded.
 */
