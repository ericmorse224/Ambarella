/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

/** @typedef {import("../Cache").Etag***REMOVED*** Etag */

class MergedEtag {
	/**
	 * @param {Etag***REMOVED*** a first
	 * @param {Etag***REMOVED*** b second
	 */
	constructor(a, b) {
		this.a = a;
		this.b = b;
	***REMOVED***

	toString() {
		return `${this.a.toString()***REMOVED***|${this.b.toString()***REMOVED***`;
	***REMOVED***
***REMOVED***

const dualObjectMap = new WeakMap();
const objectStringMap = new WeakMap();

/**
 * @param {Etag***REMOVED*** a first
 * @param {Etag***REMOVED*** b second
 * @returns {Etag***REMOVED*** result
 */
const mergeEtags = (a, b) => {
	if (typeof a === "string") {
		if (typeof b === "string") {
			return `${a***REMOVED***|${b***REMOVED***`;
		***REMOVED***
		const temp = b;
		b = a;
		a = temp;
	***REMOVED*** else if (typeof b !== "string") {
		// both a and b are objects
		let map = dualObjectMap.get(a);
		if (map === undefined) {
			dualObjectMap.set(a, (map = new WeakMap()));
		***REMOVED***
		const mergedEtag = map.get(b);
		if (mergedEtag === undefined) {
			const newMergedEtag = new MergedEtag(a, b);
			map.set(b, newMergedEtag);
			return newMergedEtag;
		***REMOVED***
		return mergedEtag;
	***REMOVED***
	// a is object, b is string
	let map = objectStringMap.get(a);
	if (map === undefined) {
		objectStringMap.set(a, (map = new Map()));
	***REMOVED***
	const mergedEtag = map.get(b);
	if (mergedEtag === undefined) {
		const newMergedEtag = new MergedEtag(a, b);
		map.set(b, newMergedEtag);
		return newMergedEtag;
	***REMOVED***
	return mergedEtag;
***REMOVED***;

module.exports = mergeEtags;
