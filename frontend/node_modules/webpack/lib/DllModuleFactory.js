/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

const DllModule = require("./DllModule");
const ModuleFactory = require("./ModuleFactory");

/** @typedef {import("./ModuleFactory").ModuleFactoryCallback***REMOVED*** ModuleFactoryCallback */
/** @typedef {import("./ModuleFactory").ModuleFactoryCreateData***REMOVED*** ModuleFactoryCreateData */
/** @typedef {import("./dependencies/DllEntryDependency")***REMOVED*** DllEntryDependency */

class DllModuleFactory extends ModuleFactory {
	constructor() {
		super();
		this.hooks = Object.freeze({***REMOVED***);
	***REMOVED***

	/**
	 * @param {ModuleFactoryCreateData***REMOVED*** data data object
	 * @param {ModuleFactoryCallback***REMOVED*** callback callback
	 * @returns {void***REMOVED***
	 */
	create(data, callback) {
		const dependency = /** @type {DllEntryDependency***REMOVED*** */ (data.dependencies[0]);
		callback(null, {
			module: new DllModule(
				data.context,
				dependency.dependencies,
				dependency.name
			)
		***REMOVED***);
	***REMOVED***
***REMOVED***

module.exports = DllModuleFactory;
