/**
 * @fileoverview Define common types for input completion.
 * @author Toru Nagashima <https://github.com/mysticatea>
 */

/** @type {any***REMOVED*** */
export default {***REMOVED***;

/** @typedef {boolean | "off" | "readable" | "readonly" | "writable" | "writeable"***REMOVED*** GlobalConf */
/** @typedef {0 | 1 | 2 | "off" | "warn" | "error"***REMOVED*** SeverityConf */
/** @typedef {SeverityConf | [SeverityConf, ...any[]]***REMOVED*** RuleConf */

/**
 * @typedef {Object***REMOVED*** EcmaFeatures
 * @property {boolean***REMOVED*** [globalReturn] Enabling `return` statements at the top-level.
 * @property {boolean***REMOVED*** [jsx] Enabling JSX syntax.
 * @property {boolean***REMOVED*** [impliedStrict] Enabling strict mode always.
 */

/**
 * @typedef {Object***REMOVED*** ParserOptions
 * @property {EcmaFeatures***REMOVED*** [ecmaFeatures] The optional features.
 * @property {3|5|6|7|8|9|10|11|12|2015|2016|2017|2018|2019|2020|2021***REMOVED*** [ecmaVersion] The ECMAScript version (or revision number).
 * @property {"script"|"module"***REMOVED*** [sourceType] The source code type.
 */

/**
 * @typedef {Object***REMOVED*** ConfigData
 * @property {Record<string, boolean>***REMOVED*** [env] The environment settings.
 * @property {string | string[]***REMOVED*** [extends] The path to other config files or the package name of shareable configs.
 * @property {Record<string, GlobalConf>***REMOVED*** [globals] The global variable settings.
 * @property {string | string[]***REMOVED*** [ignorePatterns] The glob patterns that ignore to lint.
 * @property {boolean***REMOVED*** [noInlineConfig] The flag that disables directive comments.
 * @property {OverrideConfigData[]***REMOVED*** [overrides] The override settings per kind of files.
 * @property {string***REMOVED*** [parser] The path to a parser or the package name of a parser.
 * @property {ParserOptions***REMOVED*** [parserOptions] The parser options.
 * @property {string[]***REMOVED*** [plugins] The plugin specifiers.
 * @property {string***REMOVED*** [processor] The processor specifier.
 * @property {boolean***REMOVED*** [reportUnusedDisableDirectives] The flag to report unused `eslint-disable` comments.
 * @property {boolean***REMOVED*** [root] The root flag.
 * @property {Record<string, RuleConf>***REMOVED*** [rules] The rule settings.
 * @property {Object***REMOVED*** [settings] The shared settings.
 */

/**
 * @typedef {Object***REMOVED*** OverrideConfigData
 * @property {Record<string, boolean>***REMOVED*** [env] The environment settings.
 * @property {string | string[]***REMOVED*** [excludedFiles] The glob pattarns for excluded files.
 * @property {string | string[]***REMOVED*** [extends] The path to other config files or the package name of shareable configs.
 * @property {string | string[]***REMOVED*** files The glob patterns for target files.
 * @property {Record<string, GlobalConf>***REMOVED*** [globals] The global variable settings.
 * @property {boolean***REMOVED*** [noInlineConfig] The flag that disables directive comments.
 * @property {OverrideConfigData[]***REMOVED*** [overrides] The override settings per kind of files.
 * @property {string***REMOVED*** [parser] The path to a parser or the package name of a parser.
 * @property {ParserOptions***REMOVED*** [parserOptions] The parser options.
 * @property {string[]***REMOVED*** [plugins] The plugin specifiers.
 * @property {string***REMOVED*** [processor] The processor specifier.
 * @property {boolean***REMOVED*** [reportUnusedDisableDirectives] The flag to report unused `eslint-disable` comments.
 * @property {Record<string, RuleConf>***REMOVED*** [rules] The rule settings.
 * @property {Object***REMOVED*** [settings] The shared settings.
 */

/**
 * @typedef {Object***REMOVED*** ParseResult
 * @property {Object***REMOVED*** ast The AST.
 * @property {ScopeManager***REMOVED*** [scopeManager] The scope manager of the AST.
 * @property {Record<string, any>***REMOVED*** [services] The services that the parser provides.
 * @property {Record<string, string[]>***REMOVED*** [visitorKeys] The visitor keys of the AST.
 */

/**
 * @typedef {Object***REMOVED*** Parser
 * @property {(text:string, options:ParserOptions) => Object***REMOVED*** parse The definition of global variables.
 * @property {(text:string, options:ParserOptions) => ParseResult***REMOVED*** [parseForESLint] The parser options that will be enabled under this environment.
 */

/**
 * @typedef {Object***REMOVED*** Environment
 * @property {Record<string, GlobalConf>***REMOVED*** [globals] The definition of global variables.
 * @property {ParserOptions***REMOVED*** [parserOptions] The parser options that will be enabled under this environment.
 */

/**
 * @typedef {Object***REMOVED*** LintMessage
 * @property {number***REMOVED*** column The 1-based column number.
 * @property {number***REMOVED*** [endColumn] The 1-based column number of the end location.
 * @property {number***REMOVED*** [endLine] The 1-based line number of the end location.
 * @property {boolean***REMOVED*** fatal If `true` then this is a fatal error.
 * @property {{range:[number,number], text:string***REMOVED******REMOVED*** [fix] Information for autofix.
 * @property {number***REMOVED*** line The 1-based line number.
 * @property {string***REMOVED*** message The error message.
 * @property {string|null***REMOVED*** ruleId The ID of the rule which makes this message.
 * @property {0|1|2***REMOVED*** severity The severity of this message.
 * @property {Array<{desc?: string, messageId?: string, fix: {range: [number, number], text: string***REMOVED******REMOVED***>***REMOVED*** [suggestions] Information for suggestions.
 */

/**
 * @typedef {Object***REMOVED*** SuggestionResult
 * @property {string***REMOVED*** desc A short description.
 * @property {string***REMOVED*** [messageId] Id referencing a message for the description.
 * @property {{ text: string, range: number[] ***REMOVED******REMOVED*** fix fix result info
 */

/**
 * @typedef {Object***REMOVED*** Processor
 * @property {(text:string, filename:string) => Array<string | { text:string, filename:string ***REMOVED***>***REMOVED*** [preprocess] The function to extract code blocks.
 * @property {(messagesList:LintMessage[][], filename:string) => LintMessage[]***REMOVED*** [postprocess] The function to merge messages.
 * @property {boolean***REMOVED*** [supportsAutofix] If `true` then it means the processor supports autofix.
 */

/**
 * @typedef {Object***REMOVED*** RuleMetaDocs
 * @property {string***REMOVED*** category The category of the rule.
 * @property {string***REMOVED*** description The description of the rule.
 * @property {boolean***REMOVED*** recommended If `true` then the rule is included in `eslint:recommended` preset.
 * @property {string***REMOVED*** url The URL of the rule documentation.
 */

/**
 * @typedef {Object***REMOVED*** RuleMeta
 * @property {boolean***REMOVED*** [deprecated] If `true` then the rule has been deprecated.
 * @property {RuleMetaDocs***REMOVED*** docs The document information of the rule.
 * @property {"code"|"whitespace"***REMOVED*** [fixable] The autofix type.
 * @property {Record<string,string>***REMOVED*** [messages] The messages the rule reports.
 * @property {string[]***REMOVED*** [replacedBy] The IDs of the alternative rules.
 * @property {Array|Object***REMOVED*** schema The option schema of the rule.
 * @property {"problem"|"suggestion"|"layout"***REMOVED*** type The rule type.
 */

/**
 * @typedef {Object***REMOVED*** Rule
 * @property {Function***REMOVED*** create The factory of the rule.
 * @property {RuleMeta***REMOVED*** meta The meta data of the rule.
 */

/**
 * @typedef {Object***REMOVED*** Plugin
 * @property {Record<string, ConfigData>***REMOVED*** [configs] The definition of plugin configs.
 * @property {Record<string, Environment>***REMOVED*** [environments] The definition of plugin environments.
 * @property {Record<string, Processor>***REMOVED*** [processors] The definition of plugin processors.
 * @property {Record<string, Function | Rule>***REMOVED*** [rules] The definition of plugin rules.
 */

/**
 * Information of deprecated rules.
 * @typedef {Object***REMOVED*** DeprecatedRuleInfo
 * @property {string***REMOVED*** ruleId The rule ID.
 * @property {string[]***REMOVED*** replacedBy The rule IDs that replace this deprecated rule.
 */
