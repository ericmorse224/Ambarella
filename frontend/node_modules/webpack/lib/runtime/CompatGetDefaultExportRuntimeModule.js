/*
	MIT License http://www.opensource.org/licenses/mit-license.php
*/

"use strict";

const RuntimeGlobals = require("../RuntimeGlobals");
const Template = require("../Template");
const HelperRuntimeModule = require("./HelperRuntimeModule");

/** @typedef {import("../Compilation")***REMOVED*** Compilation */

class CompatGetDefaultExportRuntimeModule extends HelperRuntimeModule {
	constructor() {
		super("compat get default export");
	***REMOVED***

	/**
	 * @returns {string | null***REMOVED*** runtime code
	 */
	generate() {
		const compilation = /** @type {Compilation***REMOVED*** */ (this.compilation);
		const { runtimeTemplate ***REMOVED*** = compilation;
		const fn = RuntimeGlobals.compatGetDefaultExport;
		return Template.asString([
			"// getDefaultExport function for compatibility with non-harmony modules",
			`${fn***REMOVED*** = ${runtimeTemplate.basicFunction("module", [
				"var getter = module && module.__esModule ?",
				Template.indent([
					`${runtimeTemplate.returningFunction("module['default']")***REMOVED*** :`,
					`${runtimeTemplate.returningFunction("module")***REMOVED***;`
				]),
				`${RuntimeGlobals.definePropertyGetters***REMOVED***(getter, { a: getter ***REMOVED***);`,
				"return getter;"
			])***REMOVED***;`
		]);
	***REMOVED***
***REMOVED***

module.exports = CompatGetDefaultExportRuntimeModule;
