/*
  Copyright 2018 Google LLC

  Use of this source code is governed by an MIT-style
  license that can be found in the LICENSE file or at
  https://opensource.org/licenses/MIT.
*/

import prettyBytes from 'pretty-bytes';

import {ManifestTransform***REMOVED*** from '../types';

export function maximumSizeTransform(
  maximumFileSizeToCacheInBytes: number,
): ManifestTransform {
  return (originalManifest) => {
    const warnings: Array<string> = [];
    const manifest = originalManifest.filter((entry) => {
      if (entry.size <= maximumFileSizeToCacheInBytes) {
        return true;
      ***REMOVED***

      warnings.push(
        `${entry.url***REMOVED*** is ${prettyBytes(entry.size)***REMOVED***, and won't ` +
          `be precached. Configure maximumFileSizeToCacheInBytes to change ` +
          `this limit.`,
      );
      return false;
    ***REMOVED***);

    return {manifest, warnings***REMOVED***;
  ***REMOVED***;
***REMOVED***
