// Main entrypoint for ESM web browser environments. Avoids using Node.js
// specific libraries, such as "path".
//
// TODO: figure out reasonable web equivalents for "resolve", "normalize", etc.
import { camelCase, decamelize, looksLikeNumber ***REMOVED*** from './build/lib/string-utils.js'
import { YargsParser ***REMOVED*** from './build/lib/yargs-parser.js'
const parser = new YargsParser({
  cwd: () => { return '' ***REMOVED***,
  format: (str, arg) => { return str.replace('%s', arg) ***REMOVED***,
  normalize: (str) => { return str ***REMOVED***,
  resolve: (str) => { return str ***REMOVED***,
  require: () => {
    throw Error('loading config from files not currently supported in browser')
  ***REMOVED***,
  env: () => {***REMOVED***
***REMOVED***)

const yargsParser = function Parser (args, opts) {
  const result = parser.parse(args.slice(), opts)
  return result.argv
***REMOVED***
yargsParser.detailed = function (args, opts) {
  return parser.parse(args.slice(), opts)
***REMOVED***
yargsParser.camelCase = camelCase
yargsParser.decamelize = decamelize
yargsParser.looksLikeNumber = looksLikeNumber

export default yargsParser
