import type { AddedKeywordDefinition ***REMOVED*** from "../types";
declare const _jsonTypes: readonly ["string", "number", "integer", "boolean", "null", "object", "array"];
export type JSONType = (typeof _jsonTypes)[number];
export declare function isJSONType(x: unknown): x is JSONType;
type ValidationTypes = {
    [K in JSONType]: boolean | RuleGroup | undefined;
***REMOVED***;
export interface ValidationRules {
    rules: RuleGroup[];
    post: RuleGroup;
    all: {
        [Key in string]?: boolean | Rule;
    ***REMOVED***;
    keywords: {
        [Key in string]?: boolean;
    ***REMOVED***;
    types: ValidationTypes;
***REMOVED***
export interface RuleGroup {
    type?: JSONType;
    rules: Rule[];
***REMOVED***
export interface Rule {
    keyword: string;
    definition: AddedKeywordDefinition;
***REMOVED***
export declare function getRules(): ValidationRules;
export {***REMOVED***;
