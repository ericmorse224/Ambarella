/**
 * @fileoverview Helpers for severity values (e.g. normalizing different types).
 * @author Bryan Mishkin
 */

"use strict";

/**
 * Convert severity value of different types to a string.
 * @param {string|number***REMOVED*** severity severity value
 * @throws error if severity is invalid
 * @returns {string***REMOVED*** severity string
 */
function normalizeSeverityToString(severity) {
    if ([2, "2", "error"].includes(severity)) {
        return "error";
    ***REMOVED***
    if ([1, "1", "warn"].includes(severity)) {
        return "warn";
    ***REMOVED***
    if ([0, "0", "off"].includes(severity)) {
        return "off";
    ***REMOVED***
    throw new Error(`Invalid severity value: ${severity***REMOVED***`);
***REMOVED***

/**
 * Convert severity value of different types to a number.
 * @param {string|number***REMOVED*** severity severity value
 * @throws error if severity is invalid
 * @returns {number***REMOVED*** severity number
 */
function normalizeSeverityToNumber(severity) {
    if ([2, "2", "error"].includes(severity)) {
        return 2;
    ***REMOVED***
    if ([1, "1", "warn"].includes(severity)) {
        return 1;
    ***REMOVED***
    if ([0, "0", "off"].includes(severity)) {
        return 0;
    ***REMOVED***
    throw new Error(`Invalid severity value: ${severity***REMOVED***`);
***REMOVED***

module.exports = {
    normalizeSeverityToString,
    normalizeSeverityToNumber
***REMOVED***;
