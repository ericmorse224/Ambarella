/**
 * @typedef {Object***REMOVED*** WDSMetaObj
 * @property {boolean***REMOVED*** enforceWs
 * @property {number***REMOVED*** version
 */

/**
 * Derives WDS metadata from a compatible socket client.
 * @param {Function***REMOVED*** SocketClient A WDS socket client (SockJS/WebSocket).
 * @returns {WDSMetaObj***REMOVED*** The parsed WDS metadata object.
 */
function getWDSMetadata(SocketClient) {
  let enforceWs = false;
  if (
    typeof SocketClient.name !== 'undefined' &&
    SocketClient.name !== null &&
    SocketClient.name.toLowerCase().includes('websocket')
  ) {
    enforceWs = true;
  ***REMOVED***

  let version;
  // WDS versions <=3.5.0
  if (!('onMessage' in SocketClient.prototype)) {
    version = 3;
  ***REMOVED*** else {
    // WDS versions >=3.5.0 <4
    if (
      'getClientPath' in SocketClient ||
      Object.getPrototypeOf(SocketClient).name === 'BaseClient'
    ) {
      version = 3;
    ***REMOVED*** else {
      version = 4;
    ***REMOVED***
  ***REMOVED***

  return {
    enforceWs: enforceWs,
    version: version,
  ***REMOVED***;
***REMOVED***

module.exports = getWDSMetadata;
