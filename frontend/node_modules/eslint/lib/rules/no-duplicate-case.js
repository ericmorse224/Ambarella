/**
 * @fileoverview Rule to disallow a duplicate case label.
 * @author Dieter Oberkofler
 * @author Burak Yigit Kaya
 */

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const astUtils = require("./utils/ast-utils");

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

/** @type {import('../types').Rule.RuleModule***REMOVED*** */
module.exports = {
	meta: {
		type: "problem",

		docs: {
			description: "Disallow duplicate case labels",
			recommended: true,
			url: "https://eslint.org/docs/latest/rules/no-duplicate-case",
		***REMOVED***,

		schema: [],

		messages: {
			unexpected: "Duplicate case label.",
		***REMOVED***,
	***REMOVED***,

	create(context) {
		const sourceCode = context.sourceCode;

		/**
		 * Determines whether the two given nodes are considered to be equal.
		 * @param {ASTNode***REMOVED*** a First node.
		 * @param {ASTNode***REMOVED*** b Second node.
		 * @returns {boolean***REMOVED*** `true` if the nodes are considered to be equal.
		 */
		function equal(a, b) {
			if (a.type !== b.type) {
				return false;
			***REMOVED***

			return astUtils.equalTokens(a, b, sourceCode);
		***REMOVED***
		return {
			SwitchStatement(node) {
				const previousTests = [];

				for (const switchCase of node.cases) {
					if (switchCase.test) {
						const test = switchCase.test;

						if (
							previousTests.some(previousTest =>
								equal(previousTest, test),
							)
						) {
							context.report({
								node: switchCase,
								messageId: "unexpected",
							***REMOVED***);
						***REMOVED*** else {
							previousTests.push(test);
						***REMOVED***
					***REMOVED***
				***REMOVED***
			***REMOVED***,
		***REMOVED***;
	***REMOVED***,
***REMOVED***;
