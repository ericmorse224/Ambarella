/*
  Copyright 2021 Google LLC

  Use of this source code is governed by an MIT-style
  license that can be found in the LICENSE file or at
  https://opensource.org/licenses/MIT.
*/

import {ok***REMOVED*** from 'assert';

import {BuildType, WorkboxPackageJSON***REMOVED*** from '../types';
import {errors***REMOVED*** from './errors';
import * as cdn from '../cdn-details.json';

function getVersionedURL(): string {
  return `${getCDNPrefix()***REMOVED***/${cdn.latestVersion***REMOVED***`;
***REMOVED***

function getCDNPrefix() {
  return `${cdn.origin***REMOVED***/${cdn.bucketName***REMOVED***/${cdn.releasesDir***REMOVED***`;
***REMOVED***

export function getModuleURL(moduleName: string, buildType: BuildType): string {
  ok(moduleName, errors['no-module-name']);

  if (buildType) {
    // eslint-disable-next-line  @typescript-eslint/no-unsafe-assignment
    const pkgJson: WorkboxPackageJSON = require(`${moduleName***REMOVED***/package.json`);
    if (buildType === 'dev' && pkgJson.workbox && pkgJson.workbox.prodOnly) {
      // This is not due to a public-facing exception, so just throw an Error(),
      // without creating an entry in errors.js.
      throw Error(`The 'dev' build of ${moduleName***REMOVED*** is not available.`);
    ***REMOVED***
    return `${getVersionedURL()***REMOVED***/${moduleName***REMOVED***.${buildType.slice(0, 4)***REMOVED***.js`;
  ***REMOVED***
  return `${getVersionedURL()***REMOVED***/${moduleName***REMOVED***.js`;
***REMOVED***
