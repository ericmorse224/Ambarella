/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

/** @typedef {import("./Resolver")***REMOVED*** Resolver */
/** @typedef {import("./Resolver").ResolveRequest***REMOVED*** ResolveRequest */
/** @typedef {import("./Resolver").ResolveStepHook***REMOVED*** ResolveStepHook */

module.exports = class JoinRequestPlugin {
	/**
	 * @param {string | ResolveStepHook***REMOVED*** source source
	 * @param {string | ResolveStepHook***REMOVED*** target target
	 */
	constructor(source, target) {
		this.source = source;
		this.target = target;
	***REMOVED***

	/**
	 * @param {Resolver***REMOVED*** resolver the resolver
	 * @returns {void***REMOVED***
	 */
	apply(resolver) {
		const target = resolver.ensureHook(this.target);
		resolver
			.getHook(this.source)
			.tapAsync("JoinRequestPlugin", (request, resolveContext, callback) => {
				const requestPath = /** @type {string***REMOVED*** */ (request.path);
				const requestRequest = /** @type {string***REMOVED*** */ (request.request);
				/** @type {ResolveRequest***REMOVED*** */
				const obj = {
					...request,
					path: resolver.join(requestPath, requestRequest),
					relativePath:
						request.relativePath &&
						resolver.join(request.relativePath, requestRequest),
					request: undefined
				***REMOVED***;
				resolver.doResolve(target, obj, null, resolveContext, callback);
			***REMOVED***);
	***REMOVED***
***REMOVED***;
