/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

/** @typedef {import("./Resolver")***REMOVED*** Resolver */
/** @typedef {import("./Resolver").ResolveRequest***REMOVED*** ResolveRequest */

/**
 * @param {Resolver***REMOVED*** resolver resolver
 * @param {ResolveRequest***REMOVED*** request string
 * @returns {string***REMOVED*** inner request
 */
module.exports = function getInnerRequest(resolver, request) {
	if (
		typeof request.__innerRequest === "string" &&
		request.__innerRequest_request === request.request &&
		request.__innerRequest_relativePath === request.relativePath
	)
		return request.__innerRequest;
	/** @type {string|undefined***REMOVED*** */
	let innerRequest;
	if (request.request) {
		innerRequest = request.request;
		if (/^\.\.?(?:\/|$)/.test(innerRequest) && request.relativePath) {
			innerRequest = resolver.join(request.relativePath, innerRequest);
		***REMOVED***
	***REMOVED*** else {
		innerRequest = request.relativePath;
	***REMOVED***
	request.__innerRequest_request = request.request;
	request.__innerRequest_relativePath = request.relativePath;
	return (request.__innerRequest = /** @type {string***REMOVED*** */ (innerRequest));
***REMOVED***;
