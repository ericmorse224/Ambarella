import webpack, { Compiler, Module ***REMOVED*** from 'webpack';
import { EmitCountMap, InternalOptions ***REMOVED*** from './';
interface BeforeRunHookArgs {
    emitCountMap: EmitCountMap;
    manifestFileName: string;
***REMOVED***
interface EmitHookArgs {
    compiler: Compiler;
    emitCountMap: EmitCountMap;
    manifestAssetId: string;
    manifestFileName: string;
    moduleAssets: Record<any, any>;
    options: InternalOptions;
***REMOVED***
declare const getCompilerHooks: (compiler: Compiler) => any;
declare const beforeRunHook: ({ emitCountMap, manifestFileName ***REMOVED***: BeforeRunHookArgs, _: Compiler, callback: Function) => void;
declare const emitHook: ({ compiler, emitCountMap, manifestAssetId, manifestFileName, moduleAssets, options ***REMOVED***: EmitHookArgs, compilation: webpack.compilation.Compilation) => void;
interface LegacyModule extends Module {
    userRequest?: any;
***REMOVED***
declare const normalModuleLoaderHook: ({ moduleAssets ***REMOVED***: {
    moduleAssets: Record<any, any>;
***REMOVED***, loaderContext: webpack.loader.LoaderContext, module: LegacyModule) => void;
export { beforeRunHook, emitHook, getCompilerHooks, normalModuleLoaderHook ***REMOVED***;
