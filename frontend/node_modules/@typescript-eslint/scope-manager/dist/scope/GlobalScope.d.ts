import type { TSESTree ***REMOVED*** from '@typescript-eslint/types';
import type { ScopeManager ***REMOVED*** from '../ScopeManager';
import type { ImplicitLibVariableOptions ***REMOVED*** from '../variable';
import type { Scope ***REMOVED*** from './Scope';
import { ScopeBase ***REMOVED*** from './ScopeBase';
import { ScopeType ***REMOVED*** from './ScopeType';
declare class GlobalScope extends ScopeBase<ScopeType.global, TSESTree.Program, 
/**
 * The global scope has no parent.
 */
null> {
    private readonly implicit;
    constructor(scopeManager: ScopeManager, block: GlobalScope['block']);
    defineImplicitVariable(name: string, options: ImplicitLibVariableOptions): void;
    close(scopeManager: ScopeManager): Scope | null;
***REMOVED***
export { GlobalScope ***REMOVED***;
//# sourceMappingURL=GlobalScope.d.ts.map