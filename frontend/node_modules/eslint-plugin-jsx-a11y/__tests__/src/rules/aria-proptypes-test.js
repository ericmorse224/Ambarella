/**
 * @fileoverview Enforce ARIA state and property values are valid.
 * @author Ethan Cohen
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

import { aria ***REMOVED*** from 'aria-query';
import { RuleTester ***REMOVED*** from 'eslint';
import test from 'tape';

import parserOptionsMapper from '../../__util__/parserOptionsMapper';
import parsers from '../../__util__/helpers/parsers';
import rule from '../../../src/rules/aria-proptypes';

const { validityCheck ***REMOVED*** = rule;

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

const ruleTester = new RuleTester();

const errorMessage = (name) => {
  const {
    type,
    values: permittedValues,
  ***REMOVED*** = aria.get(name.toLowerCase());

  switch (type) {
    case 'tristate':
      return { message: `The value for ${name***REMOVED*** must be a boolean or the string "mixed".` ***REMOVED***;
    case 'token':
      return { message: `The value for ${name***REMOVED*** must be a single token from the following: ${permittedValues***REMOVED***.` ***REMOVED***;
    case 'tokenlist':
      return {
        message: `The value for ${name***REMOVED*** must be a list of one or more \
tokens from the following: ${permittedValues***REMOVED***.`,
      ***REMOVED***;
    case 'idlist':
      return { message: `The value for ${name***REMOVED*** must be a list of strings that represent DOM element IDs (idlist)` ***REMOVED***;
    case 'id':
      return { message: `The value for ${name***REMOVED*** must be a string that represents a DOM element ID` ***REMOVED***;
    case 'boolean':
    case 'string':
    case 'integer':
    case 'number':
    default:
      return { message: `The value for ${name***REMOVED*** must be a ${type***REMOVED***.` ***REMOVED***;
  ***REMOVED***
***REMOVED***;

test('validityCheck', (t) => {
  t.equal(
    validityCheck(null, null),
    false,
    'is false for an unknown expected type',
  );

  t.end();
***REMOVED***);

ruleTester.run('aria-proptypes', rule, {
  valid: parsers.all([].concat(
    // DON'T TEST INVALID ARIA-* PROPS
    { code: '<div aria-foo="true" />' ***REMOVED***,
    { code: '<div abcaria-foo="true" />' ***REMOVED***,

    // BOOLEAN
    { code: '<div aria-hidden={true***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-hidden="true" />' ***REMOVED***,
    { code: '<div aria-hidden={"false"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-hidden={!false***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-hidden />' ***REMOVED***,
    { code: '<div aria-hidden={false***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-hidden={!true***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-hidden={!"yes"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-hidden={foo***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-hidden={foo.bar***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-hidden={null***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-hidden={undefined***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-hidden={<div />***REMOVED*** />' ***REMOVED***,

    // STRING
    { code: '<div aria-label="Close" />' ***REMOVED***,
    { code: '<div aria-label={`Close`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-label={foo***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-label={foo.bar***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-label={null***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-label={undefined***REMOVED*** />' ***REMOVED***,
    { code: '<input aria-invalid={error ? "true" : "false"***REMOVED*** />' ***REMOVED***,
    { code: '<input aria-invalid={undefined ? "true" : "false"***REMOVED*** />' ***REMOVED***,

    // TRISTATE
    { code: '<div aria-checked={true***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-checked="true" />' ***REMOVED***,
    { code: '<div aria-checked={"false"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-checked={!false***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-checked />' ***REMOVED***,
    { code: '<div aria-checked={false***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-checked={!true***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-checked={!"yes"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-checked={foo***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-checked={foo.bar***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-checked="mixed" />' ***REMOVED***,
    { code: '<div aria-checked={`mixed`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-checked={null***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-checked={undefined***REMOVED*** />' ***REMOVED***,

    // INTEGER
    { code: '<div aria-level={123***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-level={-123***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-level={+123***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-level={~123***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-level={"123"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-level={`123`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-level="123" />' ***REMOVED***,
    { code: '<div aria-level={foo***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-level={foo.bar***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-level={null***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-level={undefined***REMOVED*** />' ***REMOVED***,

    // NUMBER
    { code: '<div aria-valuemax={123***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-valuemax={-123***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-valuemax={+123***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-valuemax={~123***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-valuemax={"123"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-valuemax={`123`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-valuemax="123" />' ***REMOVED***,
    { code: '<div aria-valuemax={foo***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-valuemax={foo.bar***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-valuemax={null***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-valuemax={undefined***REMOVED*** />' ***REMOVED***,

    // TOKEN
    { code: '<div aria-sort="ascending" />' ***REMOVED***,
    { code: '<div aria-sort="ASCENDING" />' ***REMOVED***,
    { code: '<div aria-sort={"ascending"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-sort={`ascending`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-sort="descending" />' ***REMOVED***,
    { code: '<div aria-sort={"descending"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-sort={`descending`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-sort="none" />' ***REMOVED***,
    { code: '<div aria-sort={"none"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-sort={`none`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-sort="other" />' ***REMOVED***,
    { code: '<div aria-sort={"other"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-sort={`other`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-sort={foo***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-sort={foo.bar***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-invalid={true***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-invalid="true" />' ***REMOVED***,
    { code: '<div aria-invalid={false***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-invalid="false" />' ***REMOVED***,
    { code: '<div aria-invalid="grammar" />' ***REMOVED***,
    { code: '<div aria-invalid="spelling" />' ***REMOVED***,
    { code: '<div aria-invalid={null***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-invalid={undefined***REMOVED*** />' ***REMOVED***,

    // TOKENLIST
    { code: '<div aria-relevant="additions" />' ***REMOVED***,
    { code: '<div aria-relevant={"additions"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant={`additions`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant="additions removals" />' ***REMOVED***,
    { code: '<div aria-relevant="additions additions" />' ***REMOVED***,
    { code: '<div aria-relevant={"additions removals"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant={`additions removals`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant="additions removals text" />' ***REMOVED***,
    { code: '<div aria-relevant={"additions removals text"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant={`additions removals text`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant="additions removals text all" />' ***REMOVED***,
    { code: '<div aria-relevant={"additions removals text all"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant={`removals additions text all`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant={foo***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant={foo.bar***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant={null***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-relevant={undefined***REMOVED*** />' ***REMOVED***,

    // ID
    { code: '<div aria-activedescendant="ascending" />' ***REMOVED***,
    { code: '<div aria-activedescendant="ASCENDING" />' ***REMOVED***,
    { code: '<div aria-activedescendant={"ascending"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant={`ascending`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant="descending" />' ***REMOVED***,
    { code: '<div aria-activedescendant={"descending"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant={`descending`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant="none" />' ***REMOVED***,
    { code: '<div aria-activedescendant={"none"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant={`none`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant="other" />' ***REMOVED***,
    { code: '<div aria-activedescendant={"other"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant={`other`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant={foo***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant={foo.bar***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant={null***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-activedescendant={undefined***REMOVED*** />' ***REMOVED***,

    // IDLIST
    { code: '<div aria-labelledby="additions" />' ***REMOVED***,
    { code: '<div aria-labelledby={"additions"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby={`additions`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby="additions removals" />' ***REMOVED***,
    { code: '<div aria-labelledby="additions additions" />' ***REMOVED***,
    { code: '<div aria-labelledby={"additions removals"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby={`additions removals`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby="additions removals text" />' ***REMOVED***,
    { code: '<div aria-labelledby={"additions removals text"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby={`additions removals text`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby="additions removals text all" />' ***REMOVED***,
    { code: '<div aria-labelledby={"additions removals text all"***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby={`removals additions text all`***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby={foo***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby={foo.bar***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby={null***REMOVED*** />' ***REMOVED***,
    { code: '<div aria-labelledby={undefined***REMOVED*** />' ***REMOVED***,
  )).map(parserOptionsMapper),
  invalid: parsers.all([].concat(
    // BOOLEAN
    { code: '<div aria-hidden="yes" />', errors: [errorMessage('aria-hidden')] ***REMOVED***,
    { code: '<div aria-hidden="no" />', errors: [errorMessage('aria-hidden')] ***REMOVED***,
    { code: '<div aria-hidden={1234***REMOVED*** />', errors: [errorMessage('aria-hidden')] ***REMOVED***,
    {
      code: '<div aria-hidden={`${abc***REMOVED***`***REMOVED*** />',
      errors: [errorMessage('aria-hidden')],
    ***REMOVED***,

    // STRING
    { code: '<div aria-label />', errors: [errorMessage('aria-label')] ***REMOVED***,
    { code: '<div aria-label={true***REMOVED*** />', errors: [errorMessage('aria-label')] ***REMOVED***,
    { code: '<div aria-label={false***REMOVED*** />', errors: [errorMessage('aria-label')] ***REMOVED***,
    { code: '<div aria-label={1234***REMOVED*** />', errors: [errorMessage('aria-label')] ***REMOVED***,
    { code: '<div aria-label={!true***REMOVED*** />', errors: [errorMessage('aria-label')] ***REMOVED***,

    // TRISTATE
    { code: '<div aria-checked="yes" />', errors: [errorMessage('aria-checked')] ***REMOVED***,
    { code: '<div aria-checked="no" />', errors: [errorMessage('aria-checked')] ***REMOVED***,
    { code: '<div aria-checked={1234***REMOVED*** />', errors: [errorMessage('aria-checked')] ***REMOVED***,
    {
      code: '<div aria-checked={`${abc***REMOVED***`***REMOVED*** />',
      errors: [errorMessage('aria-checked')],
    ***REMOVED***,

    // INTEGER
    { code: '<div aria-level="yes" />', errors: [errorMessage('aria-level')] ***REMOVED***,
    { code: '<div aria-level="no" />', errors: [errorMessage('aria-level')] ***REMOVED***,
    { code: '<div aria-level={`abc`***REMOVED*** />', errors: [errorMessage('aria-level')] ***REMOVED***,
    { code: '<div aria-level={true***REMOVED*** />', errors: [errorMessage('aria-level')] ***REMOVED***,
    { code: '<div aria-level />', errors: [errorMessage('aria-level')] ***REMOVED***,
    { code: '<div aria-level={"false"***REMOVED*** />', errors: [errorMessage('aria-level')] ***REMOVED***,
    { code: '<div aria-level={!"false"***REMOVED*** />', errors: [errorMessage('aria-level')] ***REMOVED***,

    // NUMBER
    { code: '<div aria-valuemax="yes" />', errors: [errorMessage('aria-valuemax')] ***REMOVED***,
    { code: '<div aria-valuemax="no" />', errors: [errorMessage('aria-valuemax')] ***REMOVED***,
    {
      code: '<div aria-valuemax={`abc`***REMOVED*** />',
      errors: [errorMessage('aria-valuemax')],
    ***REMOVED***,
    {
      code: '<div aria-valuemax={true***REMOVED*** />',
      errors: [errorMessage('aria-valuemax')],
    ***REMOVED***,
    { code: '<div aria-valuemax />', errors: [errorMessage('aria-valuemax')] ***REMOVED***,
    {
      code: '<div aria-valuemax={"false"***REMOVED*** />',
      errors: [errorMessage('aria-valuemax')],
    ***REMOVED***,
    {
      code: '<div aria-valuemax={!"false"***REMOVED*** />',
      errors: [errorMessage('aria-valuemax')],
    ***REMOVED***,

    // TOKEN
    { code: '<div aria-sort="" />', errors: [errorMessage('aria-sort')] ***REMOVED***,
    { code: '<div aria-sort="descnding" />', errors: [errorMessage('aria-sort')] ***REMOVED***,
    { code: '<div aria-sort />', errors: [errorMessage('aria-sort')] ***REMOVED***,
    { code: '<div aria-sort={true***REMOVED*** />', errors: [errorMessage('aria-sort')] ***REMOVED***,
    { code: '<div aria-sort={"false"***REMOVED*** />', errors: [errorMessage('aria-sort')] ***REMOVED***,
    {
      code: '<div aria-sort="ascending descending" />',
      errors: [errorMessage('aria-sort')],
    ***REMOVED***,

    // TOKENLIST
    { code: '<div aria-relevant="" />', errors: [errorMessage('aria-relevant')] ***REMOVED***,
    {
      code: '<div aria-relevant="foobar" />',
      errors: [errorMessage('aria-relevant')],
    ***REMOVED***,
    { code: '<div aria-relevant />', errors: [errorMessage('aria-relevant')] ***REMOVED***,
    {
      code: '<div aria-relevant={true***REMOVED*** />',
      errors: [errorMessage('aria-relevant')],
    ***REMOVED***,
    {
      code: '<div aria-relevant={"false"***REMOVED*** />',
      errors: [errorMessage('aria-relevant')],
    ***REMOVED***,
    {
      code: '<div aria-relevant="additions removalss" />',
      errors: [errorMessage('aria-relevant')],
    ***REMOVED***,
    {
      code: '<div aria-relevant="additions removalss " />',
      errors: [errorMessage('aria-relevant')],
    ***REMOVED***,
  )).map(parserOptionsMapper),
***REMOVED***);
