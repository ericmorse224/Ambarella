"use strict";
const { EventEmitter ***REMOVED*** = require("events");

module.exports = class VirtualConsole extends EventEmitter {
  constructor() {
    super();

    this.on("error", () => {
      // If "error" event has no listeners,
      // EventEmitter throws an exception
    ***REMOVED***);
  ***REMOVED***

  sendTo(anyConsole, options) {
    if (options === undefined) {
      options = {***REMOVED***;
    ***REMOVED***

    for (const method of Object.keys(anyConsole)) {
      if (typeof anyConsole[method] === "function") {
        function onMethodCall(...args) {
          anyConsole[method](...args);
        ***REMOVED***
        this.on(method, onMethodCall);
      ***REMOVED***
    ***REMOVED***

    if (!options.omitJSDOMErrors) {
      this.on("jsdomError", e => anyConsole.error(e.stack, e.detail));
    ***REMOVED***

    return this;
  ***REMOVED***
***REMOVED***;
