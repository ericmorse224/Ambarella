var fs = require('fs')
var core
if (process.platform === 'win32' || global.TESTING_WINDOWS) {
  core = require('./windows.js')
***REMOVED*** else {
  core = require('./mode.js')
***REMOVED***

module.exports = isexe
isexe.sync = sync

function isexe (path, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {***REMOVED***
  ***REMOVED***

  if (!cb) {
    if (typeof Promise !== 'function') {
      throw new TypeError('callback not provided')
    ***REMOVED***

    return new Promise(function (resolve, reject) {
      isexe(path, options || {***REMOVED***, function (er, is) {
        if (er) {
          reject(er)
        ***REMOVED*** else {
          resolve(is)
        ***REMOVED***
      ***REMOVED***)
    ***REMOVED***)
  ***REMOVED***

  core(path, options || {***REMOVED***, function (er, is) {
    // ignore EACCES because that just means we aren't allowed to run it
    if (er) {
      if (er.code === 'EACCES' || options && options.ignoreErrors) {
        er = null
        is = false
      ***REMOVED***
    ***REMOVED***
    cb(er, is)
  ***REMOVED***)
***REMOVED***

function sync (path, options) {
  // my kingdom for a filtered catch
  try {
    return core.sync(path, options || {***REMOVED***)
  ***REMOVED*** catch (er) {
    if (options && options.ignoreErrors || er.code === 'EACCES') {
      return false
    ***REMOVED*** else {
      throw er
    ***REMOVED***
  ***REMOVED***
***REMOVED***
